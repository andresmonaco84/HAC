 DECLARE 
v_error_code INTEGER;
v_error_message INTEGER;

CURSOR CUR_FALTA IS 
  SELECT AGESADT.LIB_PRD_ID, AGESADT.CAD_PRD_ID  FROM SADT_PACIENTE PAC
  INNER JOIN SADT_EXAMES_PACIENTE EPAC
   ON EPAC.CODEXA = PAC.CODEXA
  INNER JOIN TB_AGS_AGE_AGENDA_SADT AGESADT
   ON AGESADT.AGS_AGE_CD_INTAMB = PAC.CODATEAMB
  AND TRUNC(AGESADT.AGS_AGE_DT_ATENDIMENTO) = TRUNC(PAC.DATEXA)
  AND AGESADT.AGS_AGE_FL_STATUS = 'P'
  INNER JOIN TB_CAD_PRD_PRODUTO PRD
   ON PRD.CAD_PRD_ID = AGESADT.CAD_PRD_ID
  INNER JOIN SADT_EXAME EXAME
   ON EXAME.CODATOMED = PRD.CAD_PRD_CD_CODIGO
  AND EXAME.CODMNE = EPAC.CODMNE;
  
BEGIN
 --BEGIN TRANSACTION;
 
  FOR X IN CUR_FALTA LOOP
  
   UPDATE TB_AGS_AGE_AGENDA_SADT AGS
       SET AGS.AGS_AGE_FL_STATUS = 'F'
   WHERE AGS.LIB_PRD_ID = X.LIB_PRD_ID 
   AND   AGS.CAD_PRD_ID = X.CAD_PRD_ID;
  
  END LOOP;
 
 --COMMIT;
 EXCEPTION
 WHEN OTHERS THEN
     v_error_code := SQLCODE;
     v_error_message := SQLERRM;
     --rollback;
     raise_application_error(v_error_code, v_error_message);

END;
  
 