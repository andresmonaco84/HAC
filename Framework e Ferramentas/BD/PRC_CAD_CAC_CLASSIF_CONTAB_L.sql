--PRC_CAD_CAC_CLASSIF_CONTAB_L
create or replace procedure PRC_CAD_CAC_CLASSIF_CONTAB_L 
(
     pCAD_CAC_ID_CLASSCONTABIL IN TB_CAD_CAC_CLASSIF_CONTAB.CAD_CAC_ID_CLASSCONTABIL%type DEFAULT NULL,
     pCAD_CAC_CD_CLASSCONTABIL IN TB_CAD_CAC_CLASSIF_CONTAB.CAD_CAC_CD_CLASSCONTABIL%type DEFAULT NULL,
     pCAD_CAC_DS_CLASSCONTABIL IN TB_CAD_CAC_CLASSIF_CONTAB.CAD_CAC_DS_CLASSCONTABIL%type DEFAULT NULL,
     pCAD_CAC_FL_CLASSCONTABIL IN TB_CAD_CAC_CLASSIF_CONTAB.CAD_CAC_FL_CLASSCONTABIL%type DEFAULT NULL,
     pCAD_CAC_DT_ULTIMA_ATUALIZACAO IN TB_CAD_CAC_CLASSIF_CONTAB.CAD_CAC_DT_ULTIMA_ATUALIZACAO%type DEFAULT NULL,
     pSEG_USU_ID_USUARIO IN TB_CAD_CAC_CLASSIF_CONTAB.SEG_USU_ID_USUARIO%type DEFAULT NULL,
     pCAD_CAC_CD_RM_NUCLEUS IN TB_CAD_CAC_CLASSIF_CONTAB.CAD_CAC_CD_RM_NUCLEUS%type DEFAULT NULL,
     pCAD_CAC_DS_RM_NUCLEUS IN TB_CAD_CAC_CLASSIF_CONTAB.CAD_CAC_DS_RM_NUCLEUS%type DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
) 
is
/********************************************************************
*    Procedure: PRC_CAD_CAC_CLASSIF_CONTAB_L
* 
*    Data Criacao: 	data da  criação   Por: Nome do Analista
*    Data Alteracao:	data da alteração  Por: Nome do Analista
*
*    Funcao: Descrição da funcionalidade da Stored Procedure
*
*******************************************************************/
 v_cursor PKG_CURSOR.t_cursor;
  V_WHERE  varchar2(5000);
  V_SELECT  varchar2(5000);
begin
  V_WHERE := NULL;
  IF pCAD_CAC_ID_CLASSCONTABIL IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND CAD_CAC_ID_CLASSCONTABIL = ' || pCAD_CAC_ID_CLASSCONTABIL; END IF;
IF pCAD_CAC_CD_CLASSCONTABIL IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND CAD_CAC_CD_CLASSCONTABIL = ' || CHR(39) || pCAD_CAC_CD_CLASSCONTABIL || CHR(39); END IF;
IF pCAD_CAC_DS_CLASSCONTABIL IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND CAD_CAC_DS_CLASSCONTABIL = ' || CHR(39) || pCAD_CAC_DS_CLASSCONTABIL || CHR(39); END IF;
IF pCAD_CAC_FL_CLASSCONTABIL IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND CAD_CAC_FL_CLASSCONTABIL = ' || CHR(39) || pCAD_CAC_FL_CLASSCONTABIL || CHR(39); END IF;
IF pCAD_CAC_DT_ULTIMA_ATUALIZACAO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND CAD_CAC_DT_ULTIMA_ATUALIZACAO = ' || CHR(39) || pCAD_CAC_DT_ULTIMA_ATUALIZACAO || CHR(39); END IF;
IF pSEG_USU_ID_USUARIO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND SEG_USU_ID_USUARIO = ' || pSEG_USU_ID_USUARIO; END IF;
IF pCAD_CAC_CD_RM_NUCLEUS IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND CAD_CAC_CD_RM_NUCLEUS = ' || CHR(39) || pCAD_CAC_CD_RM_NUCLEUS || CHR(39); END IF;
IF pCAD_CAC_DS_RM_NUCLEUS IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND CAD_CAC_DS_RM_NUCLEUS = ' || CHR(39) || pCAD_CAC_DS_RM_NUCLEUS || CHR(39); END IF;
 
   V_SELECT := '
SELECT	
       CAD_CAC_ID_CLASSCONTABIL,
       CAD_CAC_CD_CLASSCONTABIL,
       CAD_CAC_DS_CLASSCONTABIL,
       CAD_CAC_FL_CLASSCONTABIL,
       CAD_CAC_DT_ULTIMA_ATUALIZACAO,
       SEG_USU_ID_USUARIO,
       CAD_CAC_CD_RM_NUCLEUS,
       CAD_CAC_DS_RM_NUCLEUS
FROM TB_CAD_CAC_CLASSIF_CONTAB
WHERE null is null  '    ;
       
OPEN v_cursor FOR
  V_SELECT || V_WHERE ;
  io_cursor := v_cursor;
end PRC_CAD_CAC_CLASSIF_CONTAB_L;
