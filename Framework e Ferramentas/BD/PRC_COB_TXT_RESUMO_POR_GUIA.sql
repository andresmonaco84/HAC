CREATE OR REPLACE PROCEDURE "PRC_COB_TXT_RESUMO_POR_GUIA"
(
     pCOB_TXT_ID IN TB_COB_TXT_COBRANCA.COB_TXT_ID %type DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
)
is
/********************************************************************
*    Procedure: PRC_COB_TXT_RESUMO_POR_GUIA
*
*    Data Criacao:   03/08/2012    Por: PEDRO
*    Data Alteracao:
*
*    Funcao: Lista TXT RESUMIDO POR GUIA
*******************************************************************/
 v_cursor PKG_CURSOR.t_cursor;
begin
OPEN v_cursor FOR
SELECT DISTINCT
       TXT.ATD_GUI_CD_CODIGO,
       null COB_TXT_NR_GUIA,
       CCP.ATD_GUI_CD_SENHA,
       CCP.CAD_PAC_CD_CREDENCIAL,
       TXT.COB_TXT_CD_BENEF,
       CCP.ATD_ATE_ID,
       CCP.COB_CCP_ID,
       TXT.COB_TXT_NM_BENEF,
       TXT.COB_TXT_NM_BENEF CAD_PES_NM_PESSOA,
       CCP.COB_CCP_VL_TOT_CONTA,
       SUM(NVL(TXT.COB_TXT_VL_MOVIMENTO,0)) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE),TXT.COB_TXT_CD_BENEF) COB_TXT_VL_MOVIMENTO,
       SUM(NVL(TXT.COB_TXT_VL_MOVIMENTO,0) + NVL(TXT.COB_TXT_VL_ISS,0) + NVL(TXT.COB_TXT_VL_IR,0) + NVL(TXT.COB_TXT_VL_CSLL,0) + NVL(TXT.COB_TXT_VL_PIS,0) + NVL(TXT.COB_TXT_VL_COFINS,0))
         OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE),TXT.COB_TXT_CD_BENEF)
        VALOR_DIGITADO, --vl calculado na tela
       NVL(TXT.COB_TXT_PC_ISS ,0) COB_TXT_PC_ISS,
       SUM(NVL(TXT.COB_TXT_VL_ISS,0)) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE),TXT.COB_TXT_CD_BENEF) COB_TXT_VL_ISS,
       NVL(TXT.COB_TXT_PC_IR,0) COB_TXT_PC_IR,
       SUM(NVL(TXT.COB_TXT_VL_IR,0)) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE),TXT.COB_TXT_CD_BENEF) COB_TXT_VL_IR,
       NVL(TXT.COB_TXT_PC_CSLL,0) COB_TXT_PC_CSLL,
       SUM(NVL(TXT.COB_TXT_VL_CSLL,0)) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE),TXT.COB_TXT_CD_BENEF) COB_TXT_VL_CSLL,
       NVL(TXT.COB_TXT_PC_PIS ,0) COB_TXT_PC_PIS,
       SUM(NVL(TXT.COB_TXT_VL_PIS,0)) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE),TXT.COB_TXT_CD_BENEF) COB_TXT_VL_PIS,
       NVL(TXT.COB_TXT_PC_COFINS,0)  COB_TXT_PC_COFINS,
       SUM(NVL(TXT.COB_TXT_VL_COFINS,0)) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE),TXT.COB_TXT_CD_BENEF) COB_TXT_VL_COFINS,
       BAN.CAD_BAN_CD_BANCO || ' - ' || BAN.CAD_BAN_NM_BANCO CAD_BAN_NM_BANCO,
       BCT.ASS_BCT_CD_AGENCIA || ' / ' || BCT.ASS_BCT_NR_CONTA ASS_BCT_NR_CONTA,
       TXT.COB_TXT_DT_PAGTO ,
       CCP.COB_CCP_DT_PARCELA,
      -- CCP.ATD_GUI_CD_CODIGO,
       CCP.ATD_GUI_DT_VALIDADE,
       NULL COB_TXT_CD_GLOSA,
       NULL COB_TXT_VL_GLOSA,
       NULL COB_TXT_CD_ITEM,
       SUM(TXT.COB_TXT_VL_ITEM) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE),TXT.COB_TXT_CD_BENEF) COB_TXT_VL_ITEM,
       NULL COB_TXT_NR_ANEXO,
       NULL COB_TXT_NR_GUIA_ORIGEM,
       NULL COB_TXT_NR_SEQ_PAGTO,
       NULL COB_TXT_QT_SEPAG,
       (SELECT MIN(TXT2.COB_TXT_SEQ_GERAL) FROM TB_COB_TXT_COBRANCA TXT2 
        WHERE TXT2.ATD_ATE_ID          = TXT.ATD_ATE_ID 
        AND   TXT2.CAD_PAC_ID_PACIENTE = TXT.CAD_PAC_ID_PACIENTE 
        AND   TXT2.COB_CCP_ID          =  TXT.COB_CCP_ID  
        AND   TXT2.COB_COC_ID          = TXT.COB_COC_ID
        AND   TXT2.ATD_GUI_CD_CODIGO   = TXT.ATD_GUI_CD_CODIGO 
        AND   TRUNC(TXT2.ATD_GUI_DT_VALIDADE) = TRUNC(TXT.ATD_GUI_DT_VALIDADE) 
      --  AND   TXT2.COB_TXT_DT_ATEND    = TXT.COB_TXT_DT_ATEND
        AND   TXT2.FAT_NOF_ID          = TXT.FAT_NOF_ID
       )  COB_TXT_SEQ_GERAL,
       NULL COB_TXT_NR_LOTE_TISS,
       NULL COB_TXT_DT_ATEND,
       NULL COB_TXT_CD_SERVICO,
       NULL COB_TXT_DS_SERVICO,
       TRUNC(TXT.COB_TXT_DT_CRIACAO) COB_TXT_DT_CRIACAO,
       (SELECT MIN(TXT2.COB_TXT_DT_ATUALIZA_MGC) FROM TB_COB_TXT_COBRANCA TXT2 
        WHERE TXT2.ATD_ATE_ID          = TXT.ATD_ATE_ID 
        AND   TXT2.CAD_PAC_ID_PACIENTE = TXT.CAD_PAC_ID_PACIENTE 
        AND   TXT2.COB_CCP_ID          = TXT.COB_CCP_ID  
        AND   TXT2.COB_COC_ID          = TXT.COB_COC_ID
        AND   TXT2.ATD_GUI_CD_CODIGO   = TXT.ATD_GUI_CD_CODIGO 
        AND   TRUNC(TXT2.ATD_GUI_DT_VALIDADE) = TRUNC(TXT.ATD_GUI_DT_VALIDADE) 
        AND   TRUNC(TXT2.COB_TXT_DT_ATEND)    = TRUNC(TXT.COB_TXT_DT_ATEND)
        AND   TXT2.FAT_NOF_ID          = TXT.FAT_NOF_ID
       )  COB_TXT_DT_ATUALIZA_MGC,
       NULL COB_TXT_FL_STATUS,
       TXT.COB_TXT_ID,
       SUM(NVL(TXT.COB_TXT_VL_MOVIMENTO_ORIGEM,0)) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE),TXT.COB_TXT_CD_BENEF) COB_TXT_VL_MOVIMENTO_ORIGEM,
       SUM(NVL(TXT.COB_TXT_VL_MOVIMENTO_ORIGEM,0)) OVER () TOTAL_VL_MOVIMENTO_ORIGEM,
       SUM(NVL(TXT.COB_TXT_VL_MOVIMENTO,0)) OVER () TOTAL_VL_MOVIMENTO,
       SUM(NVL(TXT.COB_TXT_VL_MOVIMENTO,0) + NVL(TXT.COB_TXT_VL_ISS,0) + NVL(TXT.COB_TXT_VL_IR,0) + NVL(TXT.COB_TXT_VL_CSLL,0) +
                                     NVL(TXT.COB_TXT_VL_PIS,0) + NVL(TXT.COB_TXT_VL_COFINS,0)) OVER () TOTAL_VALOR_DIGITADO,
       SUM(NVL(TXT.COB_TXT_VL_MOVIMENTO,0) + NVL(TXT.COB_TXT_VL_ISS,0) + NVL(TXT.COB_TXT_VL_IR,0) + NVL(TXT.COB_TXT_VL_CSLL,0) +
                                     NVL(TXT.COB_TXT_VL_PIS,0) + NVL(TXT.COB_TXT_VL_COFINS,0)) OVER ()
                                      -  NVL(SUM(TXT.COB_TXT_VL_MOVIMENTO) OVER (),0) TOTAL_RETENCOES,
       SUM(NVL(TXT.COB_TXT_VL_ISS,0)) OVER () TOTAL_VALOR_ISS,
       SUM(NVL(TXT.COB_TXT_VL_IR,0)) OVER () TOTAL_VALOR_IRRF,
       SUM(NVL(TXT.COB_TXT_VL_CSLL,0)) OVER () TOTAL_VALOR_CSLL,
       SUM(NVL(TXT.COB_TXT_VL_PIS,0)) OVER () TOTAL_VALOR_PIS,
       SUM(NVL(TXT.COB_TXT_VL_COFINS,0)) OVER () TOTAL_VALOR_COFINS,                              
       DECODE(TMC_.CAD_TMC_DS_DESCRICAO,NULL,'BAIXA',TMC_.CAD_TMC_DS_DESCRICAO) CAD_TMC_DS_DESCRICAO,
       NOF.FAT_NOF_ID,
       NOF.FAT_NOF_NR_NOTAFISCAL,
       NOF.FAT_NOF_TP_SERIEFISCAL,
       TXT.ASS_BCT_ID,
       TXT.COB_COC_ID,
       TXT.CAD_PAC_ID_PACIENTE,
       TXT.CAD_PES_ID_PESSOA,
       NOF.FAT_NFO_DT_EMISSAO,
       NOF.FAT_NFO_DT_VENCIMENTO,
       NOF.FAT_NOF_MES_FAT,
       NOF.FAT_NOF_ANO_FAT,
       NOF.FAT_NFO_VL_FATURADO,
       NOF.FAT_NFO_VL_RETENCAO,
       NOF.FAT_NFO_VL_LIQUIDO,
       NOF.FAT_NOF_VL_IR,
       NOF.FAT_NOF_PC_IR,
       NOF.FAT_NOF_VL_ISS,
       NOF.FAT_NOF_PC_ISS,
       NOF.FAT_NOF_VL_COFINS,
       NOF.FAT_NOF_PC_COFINS,
       NOF.FAT_NOF_VL_CSLL,
       NOF.FAT_NOF_PC_CSLL,
       NOF.FAT_NOF_VL_PIS,
       NOF.FAT_NOF_PC_PIS,
       NOF.FAT_NOF_FL_STATUS,
       NOF.FAT_NOF_VL_DESCONTO,
       NOF.FAT_NOF_DS_DESCONTO,
       NOF.FAT_NOF_FL_JURIDICA,
       NOF.FAT_NOF_NR_DOCUMENTO,
       NOF.FAT_NFO_FL_LIBERADO_COB,
       NOF.FAT_NOF_DT_LIBERA_COBRANCA,
       NOF.FAT_NOF_FL_LIBERA_PROTOCOLO,
       NOF.FAT_NOF_DT_LIBERA_PROTOCOLO,
       NOF.FAT_NOF_FL_ENVIO_ELET_REALIZ,
       NOF.FAT_NOF_DT_ENVIO_ELETR_REALIZ,
       NOF.CAD_UNI_ID_UNIDADE,
       MGC.COB_MGC_ID,
       DECODE(TMC_.CAD_TMC_ID,NULL,1,TMC_.CAD_TMC_ID) CAD_TMC_ID,
       TXT.COB_TXT_DT_PAGTO COB_MGC_DT_MOVIMENTO,
       NVL(SUM(TXT.COB_TXT_VL_MOVIMENTO) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE), TXT.COB_TXT_CD_BENEF),0) COB_MGC_VL_MOVIMENTO,
       CASE WHEN MGC.COB_MGC_NR_NOTA_CREDITO IS NOT NULL THEN MGC.COB_MGC_NR_NOTA_CREDITO
            WHEN TXT.COB_TXT_DS_SERVICO = 'NOTA DE CREDITO' THEN TXT.COB_TXT_CD_SERVICO
       END COB_MGC_NR_NOTA_CREDITO,
       TRUNC(SYSDATE) CAD_MGC_DT_REGISTRO,
       NULL SEG_USU_ID_USUARIO_REG,
       NULL COB_MGC_DT_ULTIMA_ATUALIZACAO,
       NULL SEG_USU_ID_USUARIO_ATUALIZ,
       NULL COB_MGC_NR_PROT_PROTESTO,
       NULL COB_MGC_DS_MOTIVO_BAIXA,
       NULL COB_MGC_DT_LIBERACAO_CONTAB,
       NVL(TXT.COB_TXT_PC_ISS,0) COB_MGC_PC_ISS,
       SUM(NVL(TXT.COB_TXT_VL_ISS,0)) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE), TXT.COB_TXT_CD_BENEF) COB_MGC_VL_ISS,
       NVL(TXT.COB_TXT_PC_IR,0) COB_MGC_PC_IR,
       SUM(NVL(TXT.COB_TXT_VL_IR,0)) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE), TXT.COB_TXT_CD_BENEF) COB_MGC_VL_IR,
       NVL(TXT.COB_TXT_PC_CSLL,0) COB_MGC_PC_CSLL,
       SUM(NVL(TXT.COB_TXT_VL_CSLL,0)) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE), TXT.COB_TXT_CD_BENEF) COB_MGC_VL_CSLL,
       NVL(TXT.COB_TXT_PC_PIS,0) COB_MGC_PC_PIS,
       SUM(NVL(TXT.COB_TXT_VL_PIS,0)) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE), TXT.COB_TXT_CD_BENEF) COB_MGC_VL_PIS,
       NVL(TXT.COB_TXT_PC_COFINS,0) COB_MGC_PC_COFINS,
       SUM(NVL(TXT.COB_TXT_VL_COFINS,0)) OVER (PARTITION BY TXT.ATD_ATE_ID,TXT.CAD_PAC_ID_PACIENTE,TXT.COB_CCP_ID,TXT.COB_COC_ID,TXT.ATD_GUI_CD_CODIGO,TRUNC(TXT.ATD_GUI_DT_VALIDADE), TXT.COB_TXT_CD_BENEF) COB_MGC_VL_COFINS,
       BCT.CAD_BAN_ID,
       BCT.ASS_BCT_CD_CTA_CAIXA_RM,
       NULL CAD_PAC_NR_PRONTUARIO,
       NULL TIPO_PAGAMENTO,
       CASE WHEN MGC.COB_MGC_ID IS NOT NULL THEN 'True' ELSE 'False' END salvo
FROM      TB_COB_TXT_COBRANCA          TXT
LEFT JOIN TB_FAT_NOF_NOTA_FISCAL       NOF  ON  NOF.FAT_NOF_ID          = TXT.FAT_NOF_ID
LEFT JOIN TB_COB_CCP_CONTA_CONS_PARC   CCP  ON  CCP.FAT_NOF_ID          = TXT.FAT_NOF_ID
                                            AND CCP.ATD_ATE_ID          = TXT.ATD_ATE_ID
                                            AND CCP.COB_CCP_ID          = TXT.COB_CCP_ID
                                            AND CCP.CAD_PAC_ID_PACIENTE = TXT.CAD_PAC_ID_PACIENTE
                                            AND CCP.COB_COC_ID          = TXT.COB_COC_ID
                                            AND CCP.ATD_GUI_CD_CODIGO   = TXT.ATD_GUI_CD_CODIGO
                                            AND TRUNC(CCP.ATD_GUI_DT_VALIDADE) = TRUNC(TXT.ATD_GUI_DT_VALIDADE)
                                            AND CCP.COB_CCP_FL_STATUS   = 'A'
LEFT JOIN (
            SELECT DISTINCT TXT2.ATD_ATE_ID,TXT2.CAD_PAC_ID_PACIENTE,TXT2.COB_CCP_ID,TXT2.COB_COC_ID,TXT2.ATD_GUI_CD_CODIGO,TXT2.ATD_GUI_DT_VALIDADE,TXT2.COB_TXT_CD_BENEF,
                    CASE WHEN TXT2.COB_TXT_DS_SERVICO='NOTA DE CREDITO' then 2
                      WHEN  SUM(NVL(TXT2.COB_TXT_VL_MOVIMENTO,0) + NVL(TXT2.COB_TXT_VL_ISS,0) + NVL(TXT2.COB_TXT_VL_IR,0) + NVL(TXT2.COB_TXT_VL_CSLL,0) +
                                     NVL(TXT2.COB_TXT_VL_PIS,0) + NVL(TXT2.COB_TXT_VL_COFINS,0)) 
                                     OVER (PARTITION BY TXT2.ATD_ATE_ID,TXT2.CAD_PAC_ID_PACIENTE,TXT2.COB_CCP_ID,TXT2.COB_COC_ID,TXT2.ATD_GUI_CD_CODIGO,
                                     TXT2.ATD_GUI_DT_VALIDADE, TXT2.COB_TXT_CD_BENEF) < 0 THEN 6 
                                     ELSE 1 
                                   END CAD_TMC_ID, 
                    CASE WHEN TXT2.COB_TXT_DS_SERVICO='NOTA DE CREDITO' then 'NOTA DE CREDITO'
                      WHEN  SUM(NVL(TXT2.COB_TXT_VL_MOVIMENTO,0) + NVL(TXT2.COB_TXT_VL_ISS,0) + NVL(TXT2.COB_TXT_VL_IR,0) + NVL(TXT2.COB_TXT_VL_CSLL,0) +
                                     NVL(TXT2.COB_TXT_VL_PIS,0) + NVL(TXT2.COB_TXT_VL_COFINS,0)) 
                                     OVER (PARTITION BY TXT2.ATD_ATE_ID,TXT2.CAD_PAC_ID_PACIENTE,TXT2.COB_CCP_ID,TXT2.COB_COC_ID,TXT2.ATD_GUI_CD_CODIGO,
                                     TXT2.ATD_GUI_DT_VALIDADE, TXT2.COB_TXT_CD_BENEF) < 0 THEN 'ESTORNO' 
                                     ELSE 'BAIXA' 
                             END CAD_TMC_DS_DESCRICAO 
                                            FROM TB_COB_TXT_COBRANCA TXT2 WHERE TXT2.COB_TXT_ID = pCOB_TXT_ID
                                    ) TMC_
                                            ON  TXT.ATD_ATE_ID          = TMC_.ATD_ATE_ID 
                                            AND TXT.CAD_PAC_ID_PACIENTE = TMC_.CAD_PAC_ID_PACIENTE 
                                            AND TXT.COB_CCP_ID          = TMC_.COB_CCP_ID 
                                            AND TXT.COB_COC_ID          = TMC_.COB_COC_ID 
                                            AND TXT.ATD_GUI_CD_CODIGO   = TMC_.ATD_GUI_CD_CODIGO 
                                            AND TRUNC(TXT.ATD_GUI_DT_VALIDADE) = TRUNC(TMC_.ATD_GUI_DT_VALIDADE)
                                            AND nvl(TXT.COB_TXT_CD_BENEF,0)    = nvl(TMC_.COB_TXT_CD_BENEF,0)
LEFT JOIN TB_COB_MGC_MOV_GUIA_COBRANCA MGC  ON  MGC.FAT_NOF_ID          = TXT.FAT_NOF_ID
                                            AND MGC.ATD_ATE_ID          = TXT.ATD_ATE_ID
                                            AND MGC.COB_CCP_ID          = TXT.COB_CCP_ID
                                            AND MGC.CAD_PAC_ID_PACIENTE = TXT.CAD_PAC_ID_PACIENTE
                                            AND MGC.COB_COC_ID          = TXT.COB_COC_ID
                                            AND MGC.ATD_GUI_CD_CODIGO   = TXT.ATD_GUI_CD_CODIGO
                                            AND TRUNC(MGC.ATD_GUI_DT_VALIDADE) = TRUNC(TXT.ATD_GUI_DT_VALIDADE)
                                            AND MGC.COB_MGC_DT_MOVIMENTO = TXT.COB_TXT_DT_PAGTO
                                            AND MGC.ASS_BCT_ID          = TXT.ASS_BCT_ID
                                            AND MGC.CAD_TMC_ID            = DECODE(TMC_.CAD_TMC_ID,NULL,1,TMC_.CAD_TMC_ID)
                                            --AND MGC.COB_CCP_FL_STATUS   = 'A'
--*/
--LEFT JOIN TB_CAD_PAC_PACIENTE          PAC  ON  PAC.CAD_PAC_ID_PACIENTE = TXT.CAD_PAC_ID_PACIENTE
--LEFT JOIN TB_CAD_PES_PESSOA            PES  ON  PES.CAD_PES_ID_PESSOA   = TXT.CAD_PES_ID_PESSOA
--LEFT JOIN TB_CAD_TMC_TIPO_MOV_COBRANCA TMC  ON  TMC.CAD_TMC_ID          = CASE WHEN NVL(TXT.COB_TXT_VL_MOVIMENTO,0) < 0 THEN 2 ELSE 1 END
JOIN      TB_ASS_BCT_BANCO_CONTA       BCT  ON  BCT.ASS_BCT_ID          = TXT.ASS_BCT_ID
JOIN      TB_CAD_BAN_BANCO             BAN  ON  BAN.CAD_BAN_ID          = BCT.CAD_BAN_ID
WHERE  TXT.COB_TXT_ID          = pCOB_TXT_ID
AND    TXT.COB_TXT_FL_STATUS   = 'A'
                                  --SELECT * FROM TB_COB_TXT_COBRANCA
--ORDER BY TXT.COB_TXT_SEQ_GERAL                                  
;
  io_cursor := v_cursor;
end PRC_COB_TXT_RESUMO_POR_GUIA;
 