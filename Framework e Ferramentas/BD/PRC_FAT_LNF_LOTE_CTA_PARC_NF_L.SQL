 --PRC_FAT_LNF_LOTE_CTA_PARC_NF_L
create or replace procedure PRC_FAT_LNF_LOTE_CTA_PARC_NF_L 
(
     pFAT_LNF_ID IN TB_FAT_LNF_LOTE_CTA_PARC_NF.FAT_LNF_ID%type DEFAULT NULL,
     pFAT_LNF_DT_EMISSAO IN TB_FAT_LNF_LOTE_CTA_PARC_NF.FAT_LNF_DT_EMISSAO%type DEFAULT NULL,
     pFAT_LNF_HR_EMISSAO IN TB_FAT_LNF_LOTE_CTA_PARC_NF.FAT_LNF_HR_EMISSAO%type DEFAULT NULL,
     pFAT_LNF_VL_FATURADO IN TB_FAT_LNF_LOTE_CTA_PARC_NF.FAT_LNF_VL_FATURADO%type DEFAULT NULL,
     pFAT_LNF_DT_ULTIMA_ATUALIZACAO IN TB_FAT_LNF_LOTE_CTA_PARC_NF.FAT_LNF_DT_ULTIMA_ATUALIZACAO%type DEFAULT NULL,
     pSEG_USU_ID_USUARIO IN TB_FAT_LNF_LOTE_CTA_PARC_NF.SEG_USU_ID_USUARIO%type DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
) 
is
/********************************************************************
*    Procedure: PRC_FAT_LNF_LOTE_CTA_PARC_NF_L
* 
*    Data Criacao: 	data da  criação   Por: Nome do Analista
*    Data Alteracao:	data da alteração  Por: Nome do Analista
*
*    Funcao: Descrição da funcionalidade da Stored Procedure
*
*******************************************************************/
 v_cursor PKG_CURSOR.t_cursor;
  V_WHERE  varchar2(5000);
  V_SELECT  varchar2(5000);
begin
  V_WHERE := NULL;
  IF pFAT_LNF_ID IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND FAT_LNF_ID = ' || pFAT_LNF_ID; END IF;
IF pFAT_LNF_DT_EMISSAO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND FAT_LNF_DT_EMISSAO = ' || CHR(39) || pFAT_LNF_DT_EMISSAO || CHR(39); END IF;
IF pFAT_LNF_HR_EMISSAO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND FAT_LNF_HR_EMISSAO = ' || pFAT_LNF_HR_EMISSAO; END IF;
IF pFAT_LNF_VL_FATURADO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND FAT_LNF_VL_FATURADO = ' || pFAT_LNF_VL_FATURADO; END IF;
IF pFAT_LNF_DT_ULTIMA_ATUALIZACAO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND FAT_LNF_DT_ULTIMA_ATUALIZACAO = ' || CHR(39) || pFAT_LNF_DT_ULTIMA_ATUALIZACAO || CHR(39); END IF;
IF pSEG_USU_ID_USUARIO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND SEG_USU_ID_USUARIO = ' || pSEG_USU_ID_USUARIO; END IF;
 
   V_SELECT := '
SELECT	
       FAT_LNF_ID,
       FAT_LNF_DT_EMISSAO,
       FAT_LNF_HR_EMISSAO,
       FAT_LNF_VL_FATURADO,
       FAT_LNF_DT_ULTIMA_ATUALIZACAO,
       SEG_USU_ID_USUARIO
FROM TB_FAT_LNF_LOTE_CTA_PARC_NF
WHERE null is null  '    ;
       
OPEN v_cursor FOR
  V_SELECT || V_WHERE ;
  io_cursor := v_cursor;
end PRC_FAT_LNF_LOTE_CTA_PARC_NF_L;
