CREATE OR REPLACE PROCEDURE "PRC_COB_REL_15_N_CREDITO"
  (
    pCAD_UNI_ID_UNIDADE IN TB_ATD_ATE_ATENDIMENTO.CAD_UNI_ID_UNIDADE%TYPE DEFAULT NULL,
    pCAD_LAT_ID_LOCAL_ATENDIMENTO IN TB_ATD_ATE_ATENDIMENTO.CAD_LAT_ID_LOCAL_ATENDIMENTO%TYPE DEFAULT NULL,
    pCAD_CNV_ID_CONVENIO IN TB_CAD_CNV_CONVENIO.CAD_CNV_ID_CONVENIO%TYPE DEFAULT NULL,
    pCAD_PLA_ID_PLANO IN TB_CAD_PLA_PLANO.CAD_PLA_ID_PLANO%TYPE DEFAULT NULL,
    pDATA_EMISSAO_INI IN TB_FAT_NOF_NOTA_FISCAL.FAT_NFO_DT_EMISSAO%TYPE DEFAULT NULL,
    pDATA_EMISSAO_FIM IN TB_FAT_NOF_NOTA_FISCAL.FAT_NFO_DT_EMISSAO%TYPE DEFAULT NULL,
    pDATA_VENCIMENTO_INI IN TB_FAT_NOF_NOTA_FISCAL.FAT_NFO_DT_VENCIMENTO%TYPE DEFAULT NULL,
    pDATA_VENCIMENTO_FIM IN TB_FAT_NOF_NOTA_FISCAL.FAT_NFO_DT_VENCIMENTO%TYPE DEFAULT NULL,
    pDATA_PAGTO_INI  IN TB_COB_MGC_MOV_GUIA_COBRANCA.COB_MGC_DT_MOVIMENTO%TYPE DEFAULT NULL,
    pDATA_PAGTO_FIM  IN TB_COB_MGC_MOV_GUIA_COBRANCA.COB_MGC_DT_MOVIMENTO%TYPE DEFAULT NULL,
    pCAD_BAN_ID IN TB_CAD_BAN_BANCO.CAD_BAN_ID%TYPE DEFAULT NULL,
    pASS_BCT_ID IN TB_COB_MGC_MOV_GUIA_COBRANCA.ASS_BCT_ID%TYPE DEFAULT NULL,
    pPENDETE_CONTABILIDADE   VARCHAR2 DEFAULT NULL,
    pENVIADO_CONTABILIDADE   VARCHAR2 DEFAULT NULL,
    pCAD_TPE_CD_CODIGO_ACS IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
    pCAD_TPE_CD_CODIGO_FU IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
    pCAD_TPE_CD_CODIGO_PA IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
    pCAD_TPE_CD_CODIGO_SP IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
    pCAD_TPE_CD_CODIGO_NP IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
     pDATA_CONTAB_INI     IN TB_COB_MGC_MOV_GUIA_COBRANCA.COB_MGC_DT_LIBERACAO_CONTAB%TYPE DEFAULT NULL,
    pDATA_CONTAB_FIM     IN TB_COB_MGC_MOV_GUIA_COBRANCA.COB_MGC_DT_LIBERACAO_CONTAB%TYPE DEFAULT NULL,
    pDATA_MOVIMENTO_FIM  IN TB_COB_MGC_MOV_GUIA_COBRANCA.COB_MGC_DT_MOVIMENTO%TYPE DEFAULT NULL,
    pFAT_NOF_NR_NOTAFISCAL   IN TB_FAT_NOF_NOTA_FISCAL.FAT_NOF_NR_NOTAFISCAL%TYPE DEFAULT NULL,
    pFAT_NOF_TP_SERIEFISCAL  IN TB_FAT_NOF_NOTA_FISCAL.FAT_NOF_TP_SERIEFISCAL%TYPE DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
  )
  is
  /********************************************************************
  *    Procedure: PRC_COB_REL_15_N_CREDITO
  *
  *    Data Criac?o: 14/11/2012  Por: PEDRO
  *    Alteracao:
  *
  *
  *******************************************************************/
  v_cursor PKG_CURSOR.t_cursor;
  -- a     constant VARCHAR2(3) := '410';
  begin
    OPEN v_cursor FOR
SELECT DISTINCT

       NULL CAD_BAN_NM_BANCO,
       NULL ASS_BCT_NR_CONTA,
       CNV.CAD_CNV_CD_HAC_PRESTADOR,
       CNV.CAD_CNV_NM_FANTASIA,
       UNI.CAD_UNI_ID_UNIDADE,
       UNI.CAD_UNI_DS_UNIDADE,
       FIL.CODFILIAL,
       FIL.NOMEFANTASIA NOME_FILIAL,
       TRUNC(NOF.FAT_NFO_DT_EMISSAO) FAT_NFO_DT_EMISSAO,
       TRUNC(NOF.FAT_NFO_DT_VENCIMENTO) FAT_NFO_DT_VENCIMENTO,
       NOF.FAT_NOF_ID,
       NOF.FAT_NOF_NR_NOTAFISCAL,
       NOF.FAT_NOF_TP_SERIEFISCAL,
       NOF.FAT_NFO_VL_FATURADO,
       NOF.FAT_NOF_VL_ISS,
       NOF.FAT_NOF_VL_DESCONTO,
       NOF.FAT_NFO_VL_RETENCAO,
       NVL(NOF.FAT_NFO_VL_LIQUIDO,0) FAT_NFO_VL_LIQUIDO,
       MGC.COB_MGC_NR_NOTA_CREDITO,
       TRUNC(MGC.COB_MGC_DT_MOVIMENTO) COB_MGC_DT_MOVIMENTO,
       SUM(NVL(MGC.COB_MGC_VL_ISS,0)) OVER(PARTITION BY NOF.FAT_NOF_ID,TRUNC(MGC.COB_MGC_DT_MOVIMENTO),MGC.COB_MGC_NR_NOTA_CREDITO) COB_MGC_VL_ISS,
       SUM(NVL(MGC.COB_MGC_VL_IR,0)) OVER(PARTITION BY NOF.FAT_NOF_ID,TRUNC(MGC.COB_MGC_DT_MOVIMENTO),MGC.COB_MGC_NR_NOTA_CREDITO) COB_MGC_VL_IR,
       SUM(NVL(MGC.COB_MGC_VL_CSLL,0)) OVER(PARTITION BY NOF.FAT_NOF_ID,TRUNC(MGC.COB_MGC_DT_MOVIMENTO),MGC.COB_MGC_NR_NOTA_CREDITO) COB_MGC_VL_CSLL,
       SUM(NVL(MGC.COB_MGC_VL_PIS,0)) OVER(PARTITION BY NOF.FAT_NOF_ID,TRUNC(MGC.COB_MGC_DT_MOVIMENTO),MGC.COB_MGC_NR_NOTA_CREDITO) COB_MGC_VL_PIS,
       SUM(NVL(MGC.COB_MGC_VL_COFINS,0)) OVER(PARTITION BY NOF.FAT_NOF_ID,TRUNC(MGC.COB_MGC_DT_MOVIMENTO),MGC.COB_MGC_NR_NOTA_CREDITO) COB_MGC_VL_COFINS,
       SUM(MGC.COB_MGC_VL_MOVIMENTO) OVER(PARTITION BY NOF.FAT_NOF_ID,TRUNC(MGC.COB_MGC_DT_MOVIMENTO),MGC.COB_MGC_NR_NOTA_CREDITO) COB_MGC_VL_MOVIMENTO,
       SUM(NVL(MGC.COB_MGC_VL_MOVIMENTO,0) + NVL(MGC.COB_MGC_VL_ISS,0) + NVL(MGC.COB_MGC_VL_IR,0) + NVL(MGC.COB_MGC_VL_CSLL,0) +
           NVL(MGC.COB_MGC_VL_PIS,0) + NVL(MGC.COB_MGC_VL_COFINS,0)) OVER(PARTITION BY NOF.FAT_NOF_ID,TRUNC(MGC.COB_MGC_DT_MOVIMENTO),MGC.COB_MGC_NR_NOTA_CREDITO) VALOR_DIGITADO,
            --vl calculado na tela
       SUM(NVL(MGC.COB_MGC_VL_MOVIMENTO,0) + NVL(MGC.COB_MGC_VL_ISS,0) + NVL(MGC.COB_MGC_VL_IR,0) + NVL(MGC.COB_MGC_VL_CSLL,0) +
           NVL(MGC.COB_MGC_VL_PIS,0) + NVL(MGC.COB_MGC_VL_COFINS,0)) OVER(PARTITION BY NOF.FAT_NOF_ID,TRUNC(MGC.COB_MGC_DT_MOVIMENTO),MGC.COB_MGC_NR_NOTA_CREDITO)
             -  NVL(SUM(MGC.COB_MGC_VL_MOVIMENTO) OVER(PARTITION BY NOF.FAT_NOF_ID,TRUNC(MGC.COB_MGC_DT_MOVIMENTO),MGC.COB_MGC_NR_NOTA_CREDITO),0) TOTAL_RETENCOES
FROM      TB_FAT_NOF_NOTA_FISCAL       NOF
JOIN      TB_COB_CCP_CONTA_CONS_PARC   CCP  ON  CCP.FAT_NOF_ID          = NOF.FAT_NOF_ID
JOIN      TB_CAD_CNV_CONVENIO          CNV  ON  CNV.CAD_CNV_ID_CONVENIO = NOF.CAD_CNV_ID_CONVENIO
JOIN      TB_CAD_UNI_UNIDADE           UNI  ON  UNI.CAD_UNI_ID_UNIDADE  = NOF.CAD_UNI_ID_UNIDADE
JOIN      GFILIAL@RM                   FIL  ON  FIL.CODFILIAL           = UNI.CODFILIAL and fil.codcoligada =1
JOIN      TB_COB_MGC_MOV_GUIA_COBRANCA MGC  ON  MGC.FAT_NOF_ID          = CCP.FAT_NOF_ID
                                           AND  MGC.ATD_ATE_ID          = CCP.ATD_ATE_ID
                                           AND  MGC.CAD_PAC_ID_PACIENTE = CCP.CAD_PAC_ID_PACIENTE
                                           AND  MGC.COB_COC_ID          = CCP.COB_COC_ID
                                           AND  MGC.COB_CCP_ID          = CCP.COB_CCP_ID
                                           AND  MGC.ATD_GUI_CD_CODIGO   = CCP.ATD_GUI_CD_CODIGO
                                           AND  MGC.ATD_GUI_DT_VALIDADE = CCP.ATD_GUI_DT_VALIDADE
LEFT JOIN TB_CAD_TMC_TIPO_MOV_COBRANCA TMC  ON  TMC.CAD_TMC_ID          = MGC.CAD_TMC_ID
LEFT JOIN TB_ASS_BCT_BANCO_CONTA       BCT  ON  BCT.ASS_BCT_ID          = MGC.ASS_BCT_ID
LEFT JOIN TB_CAD_BAN_BANCO             BAN  ON  BAN.CAD_BAN_ID          = BCT.CAD_BAN_ID
WHERE  CCP.COB_CCP_FL_STATUS   = 'A'
AND    CNV.CAD_CNV_CD_OPCAO_PAGTO = '1'
AND    MGC.CAD_TMC_ID        = 2
AND    (pDATA_PAGTO_INI IS NULL OR MGC.COB_MGC_DT_MOVIMENTO >= pDATA_PAGTO_INI)
AND    (pDATA_PAGTO_FIM IS NULL OR MGC.COB_MGC_DT_MOVIMENTO <= pDATA_PAGTO_FIM)
AND    (pDATA_EMISSAO_INI IS NULL OR NOF.FAT_NFO_DT_EMISSAO >= pDATA_EMISSAO_INI)
AND    (pDATA_EMISSAO_FIM IS NULL OR NOF.FAT_NFO_DT_EMISSAO <= pDATA_EMISSAO_FIM)
AND    (pDATA_VENCIMENTO_INI IS NULL OR NOF.FAT_NFO_DT_VENCIMENTO >= pDATA_VENCIMENTO_INI)
AND    (pDATA_VENCIMENTO_FIM IS NULL OR NOF.FAT_NFO_DT_VENCIMENTO <= pDATA_VENCIMENTO_FIM)
AND    (pCAD_CNV_ID_CONVENIO is null or NOF.CAD_CNV_ID_CONVENIO = pCAD_CNV_ID_CONVENIO)
AND    (pCAD_UNI_ID_UNIDADE IS NULL OR NOF.CAD_UNI_ID_UNIDADE = pCAD_UNI_ID_UNIDADE)
AND    (pCAD_PLA_ID_PLANO is null or NOF.CAD_PLA_ID_PLANO = pCAD_PLA_ID_PLANO)
AND    (pDATA_CONTAB_INI IS NULL OR MGC.COB_MGC_DT_LIBERACAO_CONTAB >= pDATA_CONTAB_INI)
AND    (pDATA_CONTAB_FIM IS NULL OR MGC.COB_MGC_DT_LIBERACAO_CONTAB <= pDATA_CONTAB_FIM)
AND    (pDATA_MOVIMENTO_FIM IS NULL OR MGC.COB_MGC_DT_MOVIMENTO <= pDATA_MOVIMENTO_FIM)
AND    (pFAT_NOF_NR_NOTAFISCAL IS NULL OR NOF.FAT_NOF_NR_NOTAFISCAL = pFAT_NOF_NR_NOTAFISCAL)
AND    (pFAT_NOF_TP_SERIEFISCAL IS NULL OR NOF.FAT_NOF_TP_SERIEFISCAL = pFAT_NOF_TP_SERIEFISCAL)
AND    (pCAD_BAN_ID is null or BCT.CAD_BAN_ID = pCAD_BAN_ID)
AND    (pASS_BCT_ID is null or MGC.ASS_BCT_ID = pASS_BCT_ID)
AND (
    (pPENDETE_CONTABILIDADE IS NOT NULL AND MGC.COB_MGC_DT_LIBERACAO_CONTAB IS     NULL) OR
    (pENVIADO_CONTABILIDADE IS NOT NULL AND MGC.COB_MGC_DT_LIBERACAO_CONTAB IS NOT NULL) OR
    NULL IS NULL
    )
  ;
             io_cursor := v_cursor;
  end PRC_COB_REL_15_N_CREDITO;
 
