CREATE OR REPLACE PROCEDURE "PRC_REP_REL_SUB_01"
  (
     pREP_PGM_MES_PAGTO_INI     IN TB_REP_PGM_PAGTO_MEDICO.REP_PGM_MES_PAGTO%TYPE,
     pREP_PGM_ANO_PAGTO_INI     IN TB_REP_PGM_PAGTO_MEDICO.REP_PGM_ANO_PAGTO%TYPE,
     pREP_PGM_MES_PAGTO_FIM     IN TB_REP_PGM_PAGTO_MEDICO.REP_PGM_MES_PAGTO%TYPE,
     pREP_PGM_ANO_PAGTO_FIM     IN TB_REP_PGM_PAGTO_MEDICO.REP_PGM_ANO_PAGTO%TYPE,
     pCAD_CLC_ID                IN TB_CAD_CLC_CLINICA_CREDENCIADA.CAD_CLC_ID%TYPE DEFAULT NULL,
     pREP_PGM_TP_CREDENCIA_PROF IN TB_REP_PGM_PAGTO_MEDICO.REP_PGM_TP_CREDENCIA_PROF%TYPE DEFAULT NULL,
     io_cursor                  OUT PKG_CURSOR.t_cursor
  )
  is
/********************************************************************
*    Procedure: PRC_REP_REL_SUB_01
*
*    Data Criacao:    06/08/2012         Por: Davi S. M. dos Reis
*    Data Alteracao:  data da alterac?o  Por: Nome do Analista
*
*    Funcao: Descric?o da funcionalidade da Stored Procedure
*
*
*******************************************************************/
v_cursor PKG_CURSOR.t_cursor;
BEGIN
  OPEN v_cursor FOR
  SELECT NVL(DECODE(pREP_PGM_TP_CREDENCIA_PROF,
                     'MF', SUM(PPC.REP_PPC_VL_PAGO_HAC),
                     'MC', SUM(PPC.REP_PPC_VL_PAGO_ACS),
                      SUM(PPC.REP_PPC_VL_PAGO_HAC + PPC.REP_PPC_VL_PAGO_ACS)), 0) SEMVLHORA_SA,
           NVL(DECODE(pREP_PGM_TP_CREDENCIA_PROF,
                     'MF', SUM(PPC.REP_PPC_VL_HE_PAGO_HAC),
                     'MC', SUM(PPC.REP_PPC_VL_HE_PAGO_ACS),
                      SUM(PPC.REP_PPC_VL_HE_PAGO_HAC + PPC.REP_PPC_VL_HE_PAGO_ACS)), 0) SEMVLHORAEXTRA_SA,
           0 VLACRESCIMO_SA,
           0 VLDESCONTO_SA,
           PPC.CAD_CLC_ID,
           UPPER(REP.CAD_REP_DS_COMPLEMENTAR) BASECALCULO,
           '' JUSTIFICATIVA,
           'BASECALCULO' TIPOACRESC
      FROM TB_REP_PPC_PAG_PROF_CLI PPC
INNER JOIN TB_CAD_REP_BCP_BASE_CALCULO BCP
        ON BCP.CAD_REP_TP_BASE_CALCULO = PPC.CAD_REP_TP_BASE_CALCULO
INNER JOIN TB_CAD_REP_REGRA_PAGAMENTO REP
        ON PPC.CAD_REP_ID = REP.CAD_REP_ID
     WHERE BCP.REP_BCP_DS_CAMPO = 'TIPO PAGAMENTO'
       AND PPC.REP_PPC_FL_PAGTO IN ('P', 'F')
       AND TO_DATE('01'||'/'||PPC.REP_PPC_MES_PAGTO||'/'||PPC.REP_PPC_ANO_PAGTO,'DD/MM/YYYY') >= TO_DATE('01'||'/'||LPAD(pREP_PGM_MES_PAGTO_INI,2,'0')||'/'||pREP_PGM_ANO_PAGTO_INI, 'DD/MM/YYYY')
       AND TO_DATE('01'||'/'||PPC.REP_PPC_MES_PAGTO||'/'||PPC.REP_PPC_ANO_PAGTO,'DD/MM/YYYY') <= TO_DATE(LPAD(LAST_DAY(TO_DATE('01'||LPAD(pREP_PGM_MES_PAGTO_FIM,2,'0')||pREP_PGM_ANO_PAGTO_FIM, 'DDMMYYYY')),2,0)||'/'||LPAD(pREP_PGM_MES_PAGTO_FIM,2,'0')||'/'||pREP_PGM_ANO_PAGTO_FIM, 'DD/MM/YYYY')
       
       AND (pCAD_CLC_ID IS NULL OR PPC.CAD_CLC_ID = pCAD_CLC_ID)
       AND PPC.REP_PPC_FL_ANTECIPACAO = 'N'
       AND (pREP_PGM_TP_CREDENCIA_PROF IS NULL OR PPC.REP_PPC_TP_CREDENCIA_PROF = pREP_PGM_TP_CREDENCIA_PROF)
 GROUP BY PPC.CAD_CLC_ID, REP.CAD_REP_DS_COMPLEMENTAR
 UNION
   SELECT 0 SEMVLHORA_SA,
           0 SEMVLHORAEXTRA_SA,
           NVL(SUM(REP_RPA_VL_ACRESCIMO), 0) VLACRESCIMO_SA,
           NVL(SUM(REP_RPA_VL_DESCONTO), 0) VLDESCONTO_SA,
           RPA.CAD_CLC_ID,
           '' BASECALCULO,
           UPPER(JPG.CAD_JPG_DS_JUSTIFICATIVA) JUSTIFICATIVA,
           'JUSTIFICATIVA' TIPOACRESC
      FROM TB_REP_RPA_RESUMO_PAGTO RPA
     INNER JOIN TB_CAD_JPG_JUSTIFICA_PAGTO JPG
        ON JPG.ID_CAD_JPG = RPA.ID_CAD_JPG
     WHERE RPA.REP_RPA_FL_STATUS = 'A'
       AND TO_DATE('01'||'/'||RPA.REP_RPA_MES_PAGTO||'/'||RPA.REP_RPA_ANO_PAGTO,'DD/MM/YYYY') >= TO_DATE('01'||'/'||LPAD(pREP_PGM_MES_PAGTO_INI,2,'0')||'/'||pREP_PGM_ANO_PAGTO_FIM, 'DD/MM/YYYY')
       AND TO_DATE('01'||'/'||RPA.REP_RPA_MES_PAGTO||'/'||RPA.REP_RPA_ANO_PAGTO,'DD/MM/YYYY') <= TO_DATE(LPAD(LAST_DAY(TO_DATE('01'||LPAD(pREP_PGM_MES_PAGTO_FIM,2,'0')||pREP_PGM_ANO_PAGTO_FIM, 'DDMMYYYY')),2,0)||'/'||LPAD(pREP_PGM_MES_PAGTO_FIM,2,'0')||'/'||pREP_PGM_ANO_PAGTO_FIM, 'DD/MM/YYYY')
       AND (pCAD_CLC_ID IS NULL OR RPA.CAD_CLC_ID = pCAD_CLC_ID)
       AND (pREP_PGM_TP_CREDENCIA_PROF IS NULL OR RPA.REP_RPA_TP_CREDENCIA_PROF = pREP_PGM_TP_CREDENCIA_PROF)
       AND RPA.REP_RPA_FL_ANTECIPACAO = 'N'
     GROUP BY CAD_CLC_ID, JPG.CAD_JPG_DS_JUSTIFICATIVA;
-- DBMS_OUTPUT.PUT_LINE(V_SELECT);
  io_cursor := v_cursor;
end PRC_REP_REL_SUB_01;