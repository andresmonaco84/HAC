create or replace procedure PRC_CAD_ECM_L
  (
     pCAD_ECM_ID IN TB_CAD_ECM_EXCEC_COBRANCA_MTM.CAD_ECM_ID%type DEFAULT NULL,
     pCAD_CNV_ID_CONVENIO IN TB_CAD_ECM_EXCEC_COBRANCA_MTM.CAD_CNV_ID_CONVENIO%type DEFAULT NULL,
     pCAD_PRD_ID IN TB_CAD_ECM_EXCEC_COBRANCA_MTM.CAD_PRD_ID%type DEFAULT NULL,
      io_cursor OUT PKG_CURSOR.t_cursor
  )
  is
  /********************************************************************
  *    Procedure: PRC_CAD_ECM_L
  *
  *    Data Criacao:   09/12/2009  Por: Pedro
  *    Data Alteracao:  data da alteração  Por: Nome do Analista
  *
  *    Funcao: Descrição da funcionalidade da Stored Procedure
  *
  *******************************************************************/
  v_cursor PKG_CURSOR.t_cursor;
  begin
    OPEN v_cursor FOR

    SELECT DISTINCT
       ECM.CAD_ECM_ID,
       ECM.CAD_CNV_ID_CONVENIO,
       ECM.CAD_PRD_ID,
       ECM.CAD_ECM_FL_UTILIZA_VL_NF,
       ECM.TIS_MED_CD_TABELAMEDICA,
       ECM.CAD_UNI_ID_UNIDADE,
       ECM.CAD_LAT_ID_LOCAL_ATENDIMENTO,
       ECM.CAD_ECM_TP_PACIENTE,
       ECM.TIS_CDE_CD_CODIGO_DESPESA,
       ECM.CAD_ECM_VL_UNITARIO,
       ECM.CAD_ECM_VL_CUSTO,
       ECM.CAD_ECM_PC_MARGEM,
       ECM.CAD_ECM_FL_ISENTO_COBRANCA,
       ECM.CAD_ECM_DT_INICIO_VIGENCIA,
       ECM.CAD_ECM_DT_FIM_VIGENCIA,
       ECM.ASS_CPE_ID,
       ECM.CAD_ECM_FL_INT_FRAC,
       ECM.CAD_ECM_VL_FATOR_CONVERSAO,
       ECM.CAD_ECM_DT_ULTIMA_ATUALIZACAO,
       ECM.SEG_USU_ID_USUARIO,
       CNV.CAD_CNV_CD_HAC_PRESTADOR,
       PRD.CAD_PRD_DS_DESCRICAO,
       UNI.CAD_UNI_DS_UNIDADE,
       LAT.CAD_LAT_DS_LOCAL_ATENDIMENTO,
       PRD_DES.CAD_PRD_DS_DESCRICAO CAD_PRD_DS_DESCRICAO_DES,
       CPE.CAD_PRD_ID_DESTINO,
       MED.TIS_MED_DS_TABELAMEDICA,
       CDE.TIS_CDE_DS_DESCRICAO_DESPESA,
       EPP.AUX_EPP_DS_DESCRICAO
      -- GPC.AUX_GPC_DS_DESCRICAO

    FROM TB_CAD_ECM_EXCEC_COBRANCA_MTM ECM
    JOIN TB_CAD_CNV_CONVENIO           CNV
    ON   CNV.CAD_CNV_ID_CONVENIO     = ECM.CAD_CNV_ID_CONVENIO
    JOIN TB_CAD_PRD_PRODUTO            PRD
    ON   PRD.CAD_PRD_ID              = ECM.CAD_PRD_ID
    JOIN TB_AUX_EPP_ESPECPROC          EPP
    ON   EPP.AUX_EPP_CD_ESPECPROC    = PRD.AUX_EPP_CD_ESPECPROC
   --JOIN TB_AUX_GPC_GRUPOPROC          GPC
 --   ON   GPC.AUX_EPP_CD_ESPECPROC    = PRD.AUX_GPC_CD_GRUPOPROC
    JOIN TB_CAD_UNI_UNIDADE            UNI
    ON   UNI.CAD_UNI_ID_UNIDADE      = ECM.CAD_UNI_ID_UNIDADE
    JOIN TB_CAD_LAT_LOCAL_ATENDIMENTO  LAT
    ON   LAT.CAD_LAT_ID_LOCAL_ATENDIMENTO = ECM.CAD_LAT_ID_LOCAL_ATENDIMENTO
    LEFT JOIN TB_ASS_CPE_CONV_PROD_EQUIVALE CPE
    ON   CPE.ASS_CPE_ID              = ECM.ASS_CPE_ID
    LEFT JOIN TB_CAD_PRD_PRODUTO            PRD_DES
    ON   PRD_DES.CAD_PRD_ID          = CPE.CAD_PRD_ID_DESTINO
    LEFT JOIN TB_TIS_MED_TABELAMEDICA  MED
    ON   MED.TIS_MED_CD_TABELAMEDICA = ECM.TIS_MED_CD_TABELAMEDICA
    LEFT JOIN TB_TIS_CDE_CODIGO_DESPESA CDE
    ON   CDE.TIS_CDE_CD_CODIGO_DESPESA = ECM.TIS_CDE_CD_CODIGO_DESPESA
    WHERE
        (pCAD_ECM_ID is null OR ECM.CAD_ECM_ID = pCAD_ECM_ID) AND
        (pCAD_CNV_ID_CONVENIO is null OR ECM.CAD_CNV_ID_CONVENIO = pCAD_CNV_ID_CONVENIO) AND
        (pCAD_PRD_ID is null OR ECM.CAD_PRD_ID = pCAD_PRD_ID)

        ;
    io_cursor := v_cursor;
  end PRC_CAD_ECM_L;
