CREATE OR REPLACE PROCEDURE "PRC_COB_REL_17_REGRA_NF_DESC"
  (
    pCAD_UNI_ID_UNIDADE IN TB_ATD_ATE_ATENDIMENTO.CAD_UNI_ID_UNIDADE%TYPE DEFAULT NULL,
    pCAD_LAT_ID_LOCAL_ATENDIMENTO IN TB_ATD_ATE_ATENDIMENTO.CAD_LAT_ID_LOCAL_ATENDIMENTO%TYPE DEFAULT NULL,
    pCAD_CNV_ID_CONVENIO IN TB_CAD_CNV_CONVENIO.CAD_CNV_ID_CONVENIO%TYPE DEFAULT NULL,
    pCAD_PLA_ID_PLANO IN TB_CAD_PLA_PLANO.CAD_PLA_ID_PLANO%TYPE DEFAULT NULL,
    pDATA_EMISSAO_INI IN TB_FAT_NOF_NOTA_FISCAL.FAT_NFO_DT_EMISSAO%TYPE DEFAULT NULL,
    pDATA_EMISSAO_FIM IN TB_FAT_NOF_NOTA_FISCAL.FAT_NFO_DT_EMISSAO%TYPE DEFAULT NULL,
    pDATA_VENCIMENTO_INI IN TB_FAT_NOF_NOTA_FISCAL.FAT_NFO_DT_VENCIMENTO%TYPE DEFAULT NULL,
    pDATA_VENCIMENTO_FIM IN TB_FAT_NOF_NOTA_FISCAL.FAT_NFO_DT_VENCIMENTO%TYPE DEFAULT NULL,
    pDATA_PAGTO_INI  IN TB_COB_MGC_MOV_GUIA_COBRANCA.COB_MGC_DT_MOVIMENTO%TYPE DEFAULT NULL,
    pDATA_PAGTO_FIM  IN TB_COB_MGC_MOV_GUIA_COBRANCA.COB_MGC_DT_MOVIMENTO%TYPE DEFAULT NULL,
    pCAD_BAN_ID IN TB_CAD_BAN_BANCO.CAD_BAN_ID%TYPE DEFAULT NULL,
    pASS_BCT_ID IN TB_COB_MGC_MOV_GUIA_COBRANCA.ASS_BCT_ID%TYPE DEFAULT NULL,
    pPENDETE_CONTABILIDADE   VARCHAR2 DEFAULT NULL,
    pENVIADO_CONTABILIDADE   VARCHAR2 DEFAULT NULL,
    pCAD_TPE_CD_CODIGO_ACS IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
    pCAD_TPE_CD_CODIGO_FU IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
    pCAD_TPE_CD_CODIGO_PA IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
    pCAD_TPE_CD_CODIGO_SP IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
    pCAD_TPE_CD_CODIGO_NP IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
     pDATA_CONTAB_INI     IN TB_COB_MGC_MOV_GUIA_COBRANCA.COB_MGC_DT_LIBERACAO_CONTAB%TYPE DEFAULT NULL,
    pDATA_CONTAB_FIM     IN TB_COB_MGC_MOV_GUIA_COBRANCA.COB_MGC_DT_LIBERACAO_CONTAB%TYPE DEFAULT NULL,
    pDATA_MOVIMENTO_FIM  IN TB_COB_MGC_MOV_GUIA_COBRANCA.COB_MGC_DT_MOVIMENTO%TYPE DEFAULT NULL,
    pFAT_NOF_NR_NOTAFISCAL   IN TB_FAT_NOF_NOTA_FISCAL.FAT_NOF_NR_NOTAFISCAL%TYPE DEFAULT NULL,
    pFAT_NOF_TP_SERIEFISCAL  IN TB_FAT_NOF_NOTA_FISCAL.FAT_NOF_TP_SERIEFISCAL%TYPE DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
     --,TESTE OUT LONG
  )
  is
  /********************************************************************
  *    Procedure: PRC_COB_REL_17_REGRA_NF_DESC
  *
  *    Data Criac?o: 29/11/2012  Por: PEDRO
  *    Alteracao:
  *
  *(Convert.ToDecimal(rowRestante["VALOR_DIGITADO"]) <=
                        ((Convert.ToDecimal(rowRestante[CobrancaContaConsumoParcelaDTO.FieldNames.ValorTotalConta]) * 2)/100) &
                        Convert.ToDecimal(rowRestante["VALOR_DIGITADO"]) <= 10
                        )
  *******************************************************************/
  v_cursor PKG_CURSOR.t_cursor;
  V_WHERE_NOF  varchar2(3000);
  V_WHERE_MGC  varchar2(3000);
  V_SELECT  varchar2(30000);
begin
  V_WHERE_NOF := NULL;
IF pCAD_UNI_ID_UNIDADE IS NOT NULL THEN V_WHERE_NOF:= V_WHERE_NOF || ' AND NOF.CAD_UNI_ID_UNIDADE = ' || pCAD_UNI_ID_UNIDADE; END IF;
IF pCAD_CNV_ID_CONVENIO IS NOT NULL THEN V_WHERE_NOF := V_WHERE_NOF || ' AND NOF.CAD_CNV_ID_CONVENIO = ' || pCAD_CNV_ID_CONVENIO;    END IF;
IF pFAT_NOF_NR_NOTAFISCAL IS NOT NULL THEN V_WHERE_NOF := V_WHERE_NOF || ' AND NOF.FAT_NOF_NR_NOTAFISCAL = ' ||CHR(39)|| pFAT_NOF_NR_NOTAFISCAL ||CHR(39);    END IF;
IF pFAT_NOF_TP_SERIEFISCAL IS NOT NULL THEN V_WHERE_NOF := V_WHERE_NOF || ' AND NOF.FAT_NOF_TP_SERIEFISCAL = ' ||CHR(39)|| pFAT_NOF_TP_SERIEFISCAL ||CHR(39);    END IF;
IF pDATA_EMISSAO_INI IS NOT NULL THEN V_WHERE_NOF := V_WHERE_NOF || ' AND TRUNC(NOF.FAT_NFO_DT_EMISSAO) >= ' ||CHR(39)|| pDATA_EMISSAO_INI ||CHR(39);    END IF;
IF pDATA_EMISSAO_FIM IS NOT NULL THEN V_WHERE_NOF := V_WHERE_NOF || ' AND TRUNC(NOF.FAT_NFO_DT_EMISSAO) <= ' ||CHR(39)|| pDATA_EMISSAO_FIM ||CHR(39);    END IF;
IF pDATA_VENCIMENTO_INI IS NOT NULL THEN V_WHERE_NOF := V_WHERE_NOF || ' AND TRUNC(NOF.FAT_NFO_DT_VENCIMENTO) >= ' ||CHR(39)|| pDATA_VENCIMENTO_INI ||CHR(39);    END IF;
IF pDATA_VENCIMENTO_FIM IS NOT NULL THEN V_WHERE_NOF := V_WHERE_NOF || ' AND TRUNC(NOF.FAT_NFO_DT_VENCIMENTO) <= ' ||CHR(39)|| pDATA_VENCIMENTO_FIM ||CHR(39);    END IF;
V_WHERE_MGC := NULL;
IF pDATA_CONTAB_INI IS NOT NULL THEN V_WHERE_MGC := V_WHERE_MGC || ' AND MGC.COB_MGC_DT_LIBERACAO_CONTAB >= ' ||CHR(39)|| pDATA_CONTAB_INI ||CHR(39);    END IF;
IF pDATA_CONTAB_FIM IS NOT NULL THEN V_WHERE_MGC := V_WHERE_MGC || ' AND MGC.COB_MGC_DT_LIBERACAO_CONTAB <= ' ||CHR(39)|| pDATA_CONTAB_FIM ||CHR(39);    END IF;
IF pDATA_PAGTO_INI IS NOT NULL THEN V_WHERE_MGC := V_WHERE_MGC || ' AND MGC.COB_MGC_DT_MOVIMENTO >= ' ||CHR(39)|| pDATA_PAGTO_INI ||CHR(39);    END IF;
IF pDATA_PAGTO_FIM IS NOT NULL THEN V_WHERE_MGC := V_WHERE_MGC || ' AND MGC.COB_MGC_DT_MOVIMENTO <= ' ||CHR(39)|| pDATA_PAGTO_FIM ||CHR(39);    END IF;
IF pASS_BCT_ID IS NOT NULL THEN V_WHERE_MGC:= V_WHERE_MGC || ' AND MGC.ASS_BCT_ID = ' || pASS_BCT_ID; END IF;
V_SELECT:=
'
SELECT      
       CNV.CAD_CNV_CD_HAC_PRESTADOR,
       CNV.CAD_CNV_NM_FANTASIA,
       UNI.CAD_UNI_DS_UNIDADE,
       UNI.CAD_UNI_DS_RESUMIDA,
       TRUNC(NOF.FAT_NFO_DT_EMISSAO) FAT_NFO_DT_EMISSAO,
       TRUNC(NOF.FAT_NFO_DT_VENCIMENTO) FAT_NFO_DT_VENCIMENTO,
       NOF.FAT_NOF_ID,
       NOF.FAT_NOF_NR_NOTAFISCAL,
       NOF.FAT_NOF_TP_SERIEFISCAL,
       NOF.FAT_NFO_VL_FATURADO,
       NOF.FAT_NOF_VL_ISS,
       NOF.FAT_NOF_VL_DESCONTO,
       NOF.FAT_NFO_VL_RETENCAO,
       NVL(NOF.FAT_NFO_VL_LIQUIDO,0) FAT_NFO_VL_LIQUIDO,
       MGC.VALOR_DIGITADO ,
       SUM(CCP.COB_CCP_VL_TOT_CONTA) COB_CCP_VL_TOT_CONTA,
       ROUND((MGC.VALOR_DIGITADO *100)/SUM(CCP.COB_CCP_VL_TOT_CONTA),4) PCT_PAGO,
       ((SUM(CCP.COB_CCP_VL_TOT_CONTA) * 2)/100) DOIS_PCT_NOTA,
       (SUM(CCP.COB_CCP_VL_TOT_CONTA)- MGC.VALOR_DIGITADO) VALOR_ARREDONDAR,
        EXISTE_GUIA_SEM_PGTO.EXISTE_GUIA_SEM_PGTO
FROM      TB_FAT_NOF_NOTA_FISCAL       NOF
JOIN      TB_COB_CCP_CONTA_CONS_PARC   CCP  ON  CCP.FAT_NOF_ID          = NOF.FAT_NOF_ID
JOIN      TB_CAD_CNV_CONVENIO          CNV  ON  CNV.CAD_CNV_ID_CONVENIO = NOF.CAD_CNV_ID_CONVENIO
JOIN      TB_CAD_UNI_UNIDADE           UNI  ON  UNI.CAD_UNI_ID_UNIDADE  = NOF.CAD_UNI_ID_UNIDADE
LEFT JOIN (SELECT SUM(NVL(MGC.COB_MGC_VL_MOVIMENTO,0))+SUM(NVL(MGC.COB_MGC_VL_ISS,0))+SUM(NVL(MGC.COB_MGC_VL_IR,0))+SUM(NVL(MGC.COB_MGC_VL_CSLL,0))+ SUM(NVL(MGC.COB_MGC_VL_PIS,0)) +SUM(NVL(MGC.COB_MGC_VL_COFINS,0)) VALOR_DIGITADO,
              MGC.FAT_NOF_ID
        FROM      TB_FAT_NOF_NOTA_FISCAL       NOF
        JOIN      TB_COB_MGC_MOV_GUIA_COBRANCA MGC  ON  MGC.FAT_NOF_ID          = NOF.FAT_NOF_ID
        LEFT JOIN TB_ASS_BCT_BANCO_CONTA       BCT  ON  BCT.ASS_BCT_ID          = MGC.ASS_BCT_ID
        LEFT JOIN TB_CAD_BAN_BANCO             BAN  ON  BAN.CAD_BAN_ID          = BCT.CAD_BAN_ID
        WHERE MGC.CAD_TMC_ID          != 7 
        ' || V_WHERE_NOF || '
        ' || V_WHERE_MGC || '
          AND  ((' ||CHR(39)|| pPENDETE_CONTABILIDADE ||CHR(39)|| ' IS NOT NULL AND MGC.COB_MGC_DT_LIBERACAO_CONTAB IS     NULL) OR
            (' ||CHR(39)|| pPENDETE_CONTABILIDADE ||CHR(39)|| ' IS NOT NULL AND MGC.COB_MGC_DT_LIBERACAO_CONTAB IS NOT NULL) OR
            NULL IS NULL
            )
        GROUP BY MGC.FAT_NOF_ID
      ) MGC ON  MGC.FAT_NOF_ID          = CCP.FAT_NOF_ID                
LEFT  JOIN (SELECT DISTINCT AAA.EXISTE_GUIA_SEM_PGTO,AAA.FAT_NOF_ID FROM 
           (SELECT DISTINCT 1 EXISTE_GUIA_SEM_PGTO,
                CCP.FAT_NOF_ID,CCP.ATD_ATE_ID,CCP.CAD_PAC_ID_PACIENTE,CCP.COB_COC_ID,CCP.COB_CCP_ID,CCP.ATD_GUI_CD_CODIGO,CCP.ATD_GUI_DT_VALIDADE,
               SUM(NVL(MGC.COB_MGC_VL_MOVIMENTO,0) + NVL(MGC.COB_MGC_VL_ISS,0) + NVL(MGC.COB_MGC_VL_IR,0) + NVL(MGC.COB_MGC_VL_CSLL,0) +
                NVL(MGC.COB_MGC_VL_PIS,0) + NVL(MGC.COB_MGC_VL_COFINS,0)), CCP.COB_CCP_VL_TOT_CONTA
             FROM      TB_FAT_NOF_NOTA_FISCAL NOF
             JOIN      TB_COB_CCP_CONTA_CONS_PARC   CCP ON CCP.FAT_NOF_ID           = NOF.FAT_NOF_ID
             LEFT JOIN TB_COB_MGC_MOV_GUIA_COBRANCA MGC ON  MGC.FAT_NOF_ID          = CCP.FAT_NOF_ID
                                                       AND  MGC.ATD_ATE_ID          = CCP.ATD_ATE_ID
                                                       AND  MGC.CAD_PAC_ID_PACIENTE = CCP.CAD_PAC_ID_PACIENTE
                                                       AND  MGC.COB_COC_ID          = CCP.COB_COC_ID
                                                       AND  MGC.COB_CCP_ID          = CCP.COB_CCP_ID
                                                       AND  MGC.ATD_GUI_CD_CODIGO   = CCP.ATD_GUI_CD_CODIGO
                                                       AND  MGC.ATD_GUI_DT_VALIDADE = CCP.ATD_GUI_DT_VALIDADE
               WHERE  1=1 ' || V_WHERE_NOF || '
               GROUP BY
                CCP.FAT_NOF_ID,CCP.ATD_ATE_ID,CCP.CAD_PAC_ID_PACIENTE,CCP.COB_COC_ID,CCP.COB_CCP_ID,CCP.ATD_GUI_CD_CODIGO,CCP.ATD_GUI_DT_VALIDADE
                ,CCP.COB_CCP_VL_TOT_CONTA
            HAVING  SUM(NVL(MGC.COB_MGC_VL_MOVIMENTO,0) + NVL(MGC.COB_MGC_VL_ISS,0) + NVL(MGC.COB_MGC_VL_IR,0) + NVL(MGC.COB_MGC_VL_CSLL,0) +
                NVL(MGC.COB_MGC_VL_PIS,0) + NVL(MGC.COB_MGC_VL_COFINS,0)) = 0
                 ) AAA
            ) EXISTE_GUIA_SEM_PGTO ON  EXISTE_GUIA_SEM_PGTO.FAT_NOF_ID          = CCP.FAT_NOF_ID
WHERE  CCP.COB_CCP_FL_STATUS   = ''A''
AND    CNV.CAD_CNV_CD_OPCAO_PAGTO = ''1''
  ' || V_WHERE_NOF || '

      GROUP BY       
       MGC.VALOR_DIGITADO,
       CNV.CAD_CNV_CD_HAC_PRESTADOR,
       CNV.CAD_CNV_NM_FANTASIA,
       UNI.CAD_UNI_DS_UNIDADE,
       UNI.CAD_UNI_DS_RESUMIDA,
       TRUNC(NOF.FAT_NFO_DT_EMISSAO) ,
       TRUNC(NOF.FAT_NFO_DT_VENCIMENTO) ,
       NOF.FAT_NOF_ID,
       NOF.FAT_NOF_NR_NOTAFISCAL,
       NOF.FAT_NOF_TP_SERIEFISCAL,
       NOF.FAT_NFO_VL_FATURADO,
       NOF.FAT_NOF_VL_ISS,
       NOF.FAT_NOF_VL_DESCONTO,
       NOF.FAT_NFO_VL_RETENCAO,
       NVL(NOF.FAT_NFO_VL_LIQUIDO,0) ,
       EXISTE_GUIA_SEM_PGTO.EXISTE_GUIA_SEM_PGTO
       --TA ERRADO
HAVING   ((MGC.VALOR_DIGITADO *100)/SUM(CCP.COB_CCP_VL_TOT_CONTA)  BETWEEN 98 AND 99.9999) 
        AND (SUM(CCP.COB_CCP_VL_TOT_CONTA)- MGC.VALOR_DIGITADO)  BETWEEN 0 AND 10
        AND (EXISTE_GUIA_SEM_PGTO.EXISTE_GUIA_SEM_PGTO IS NULL  OR EXISTE_GUIA_SEM_PGTO.EXISTE_GUIA_SEM_PGTO = 0)'
        ;
   -- TESTE :=  V_SELECT ;
   --dbms_output.put_line(V_SELECT);
  OPEN v_cursor FOR
  --  SELECT 1 FROM DUAL;
   V_SELECT ;
    io_cursor := v_cursor;
  end PRC_COB_REL_17_REGRA_NF_DESC;
 
