 
--PRC_FAT_PGP_PER_GRAUPARPROF_L
create or replace procedure PRC_FAT_PGP_PER_GRAUPARPROF_L 
(
     pTIS_GPP_CD_GRAU_PART_PROF IN TB_FAT_PGP_PER_GRAUPARPROF.TIS_GPP_CD_GRAU_PART_PROF%type DEFAULT NULL,
     pFAT_PGP_FL_CIR_SIMULTANEA IN TB_FAT_PGP_PER_GRAUPARPROF.FAT_PGP_FL_CIR_SIMULTANEA%type DEFAULT NULL,
     pFAT_PGP_FL_CIR_BILATERAL IN TB_FAT_PGP_PER_GRAUPARPROF.FAT_PGP_FL_CIR_BILATERAL%type DEFAULT NULL,
     pFAT_PGP_FL_CIR_EQUIPE_DIF IN TB_FAT_PGP_PER_GRAUPARPROF.FAT_PGP_FL_CIR_EQUIPE_DIF%type DEFAULT NULL,
     pFAT_PGP_PC_PARTICIPACAO IN TB_FAT_PGP_PER_GRAUPARPROF.FAT_PGP_PC_PARTICIPACAO%type DEFAULT NULL,
     pFAT_PGP_FL_STATUS IN TB_FAT_PGP_PER_GRAUPARPROF.FAT_PGP_FL_STATUS%type DEFAULT NULL,
     pFAT_PGP_DT_ULTIMA_ATUALIZACAO IN TB_FAT_PGP_PER_GRAUPARPROF.FAT_PGP_DT_ULTIMA_ATUALIZACAO%type DEFAULT NULL,
     pSEG_USU_ID_USUARIO IN TB_FAT_PGP_PER_GRAUPARPROF.SEG_USU_ID_USUARIO%type DEFAULT NULL,
     pTIS_TVA_CD_VIAACESSO IN TB_FAT_PGP_PER_GRAUPARPROF.TIS_TVA_CD_VIAACESSO%type DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
) 
is
/********************************************************************
*    Procedure: PRC_FAT_PGP_PER_GRAUPARPROF_L
* 
*    Data Criacao: 	data da  criação   Por: Nome do Analista
*    Data Alteracao:	data da alteração  Por: Nome do Analista
*
*    Funcao: Descrição da funcionalidade da Stored Procedure
*
*******************************************************************/
 v_cursor PKG_CURSOR.t_cursor;
  V_WHERE  varchar2(5000);
  V_SELECT  varchar2(5000);
begin
  V_WHERE := NULL;
  IF pTIS_GPP_CD_GRAU_PART_PROF IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TIS_GPP_CD_GRAU_PART_PROF = ' || CHR(39) || pTIS_GPP_CD_GRAU_PART_PROF || CHR(39); END IF;
IF pFAT_PGP_FL_CIR_SIMULTANEA IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND FAT_PGP_FL_CIR_SIMULTANEA = ' || CHR(39) || pFAT_PGP_FL_CIR_SIMULTANEA || CHR(39); END IF;
IF pFAT_PGP_FL_CIR_BILATERAL IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND FAT_PGP_FL_CIR_BILATERAL = ' || CHR(39) || pFAT_PGP_FL_CIR_BILATERAL || CHR(39); END IF;
IF pFAT_PGP_FL_CIR_EQUIPE_DIF IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND FAT_PGP_FL_CIR_EQUIPE_DIF = ' || CHR(39) || pFAT_PGP_FL_CIR_EQUIPE_DIF || CHR(39); END IF;
IF pFAT_PGP_PC_PARTICIPACAO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND FAT_PGP_PC_PARTICIPACAO = ' || pFAT_PGP_PC_PARTICIPACAO; END IF;
IF pFAT_PGP_FL_STATUS IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND FAT_PGP_FL_STATUS = ' || CHR(39) || pFAT_PGP_FL_STATUS || CHR(39); END IF;
IF pFAT_PGP_DT_ULTIMA_ATUALIZACAO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND FAT_PGP_DT_ULTIMA_ATUALIZACAO = ' || CHR(39) || pFAT_PGP_DT_ULTIMA_ATUALIZACAO || CHR(39); END IF;
IF pSEG_USU_ID_USUARIO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND SEG_USU_ID_USUARIO = ' || pSEG_USU_ID_USUARIO; END IF;
IF pTIS_TVA_CD_VIAACESSO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TIS_TVA_CD_VIAACESSO = ' || CHR(39) || pTIS_TVA_CD_VIAACESSO || CHR(39); END IF;
 
   V_SELECT := '
SELECT	
       TIS_GPP_CD_GRAU_PART_PROF,
       FAT_PGP_FL_CIR_SIMULTANEA,
       FAT_PGP_FL_CIR_BILATERAL,
       FAT_PGP_FL_CIR_EQUIPE_DIF,
       FAT_PGP_PC_PARTICIPACAO,
       FAT_PGP_FL_STATUS,
       FAT_PGP_DT_ULTIMA_ATUALIZACAO,
       SEG_USU_ID_USUARIO,
       TIS_TVA_CD_VIAACESSO
FROM TB_FAT_PGP_PER_GRAUPARPROF
WHERE null is null  '    ;
       
OPEN v_cursor FOR
  V_SELECT || V_WHERE ;
  io_cursor := v_cursor;
end PRC_FAT_PGP_PER_GRAUPARPROF_L;
