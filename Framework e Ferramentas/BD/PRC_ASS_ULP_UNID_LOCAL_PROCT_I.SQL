create or replace procedure PRC_ASS_ULP_UNID_LOCAL_PROCT_I
  (
	 pNewIdt                       OUT INTEGER,
	 pCAD_UNI_ID_UNIDADE           IN TB_ASS_ULP_UNID_LOCAL_PROCED.CAD_UNI_ID_UNIDADE%TYPE,
	 pCAD_LAT_ID_LOCAL_ATENDIMENTO IN TB_ASS_ULP_UNID_LOCAL_PROCED.CAD_LAT_ID_LOCAL_ATENDIMENTO%TYPE,
	 pAUX_EPP_CD_ESPECPROCED       IN TB_ASS_ULP_UNID_LOCAL_PROCED.AUX_EPP_CD_ESPECPROCED%TYPE,
	 pAUX_GPC_CD_GRUPOPROC         IN TB_ASS_ULP_UNID_LOCAL_PROCED.AUX_GPC_CD_GRUPOPROC%TYPE DEFAULT NULL,
	 pSEG_USU_ID_USUARIO           IN TB_ASS_ULP_UNID_LOCAL_PROCED.SEG_USU_ID_USUARIO%TYPE,
	 pCAD_SET_ID                   IN TB_ASS_ULP_UNID_LOCAL_PROCED.CAD_SET_ID%TYPE,
	 pAGE_SAU_ID                   IN TB_ASS_ULP_UNID_LOCAL_PROCED.AGE_SAU_ID%TYPE DEFAULT NULL,
	 pASS_ULP_QT_HORA_RESERVADA    IN TB_ASS_ULP_UNID_LOCAL_PROCED.ASS_ULP_QT_HORA_RESERVADA%TYPE DEFAULT NULL,
	 pASS_ULP_FL_LIB_AGE_SADT      IN TB_ASS_ULP_UNID_LOCAL_PROCED.ASS_ULP_FL_LIB_AGE_SADT%TYPE DEFAULT NULL,
	 pASS_ULP_FL_EXI_PREP_AGESADT  IN TB_ASS_ULP_UNID_LOCAL_PROCED.ASS_ULP_FL_EXI_PREP_AGESADT%TYPE DEFAULT NULL,
	 pTIS_MED_CD_TABELAMEDICA      IN TB_ASS_ULP_UNID_LOCAL_PROCED.TIS_MED_CD_TABELAMEDICA%TYPE DEFAULT NULL,
	 pASS_ULP_HR_LIMITE_AGE_SADT   IN TB_ASS_ULP_UNID_LOCAL_PROCED.ASS_ULP_HR_LIMITE_AGE_SADT%TYPE DEFAULT NULL
  ) 
  is
  /********************************************************************
  *    Procedure: PRC_ASS_ULP_UNID_LOCAL_PROCT_I
  *
  *    Data Criacao:  16/09/2008          Por: Fabiola Lopes
  *    Data Alteracao: data da alteracao  Por: Nome do Analista
  *
  *    Funcao: Inclui a Associacao na Unidade e Local para todos os Procedimentos/Produtos
  *******************************************************************/
  lIdtRetorno            INTEGER;
  nCount                 INTEGER;
  v_CAD_PRD_CD_CODIGO    NUMBER;
  v_AUX_GPC_CD_GRUPOPROC NUMBER;
  v_CAD_PRD_ID           NUMBER;

  CURSOR CURSOR_PLANOS IS

      SELECT PRD.CAD_PRD_CD_CODIGO, PRD.AUX_GPC_CD_GRUPOPROC, PRD.CAD_PRD_ID
        FROM TB_CAD_PRD_PRODUTO PRD
       WHERE PRD.AUX_EPP_CD_ESPECPROC = pAUX_EPP_CD_ESPECPROCED
         AND (pAUX_GPC_CD_GRUPOPROC IS NULL OR PRD.AUX_GPC_CD_GRUPOPROC = pAUX_GPC_CD_GRUPOPROC)
         AND PRD.TIS_MED_CD_TABELAMEDICA = pTIS_MED_CD_TABELAMEDICA
         AND PRD.CAD_PRD_FL_STATUS = 'A'
         ORDER BY 3;
BEGIN

  FOR X IN CURSOR_PLANOS LOOP

    v_CAD_PRD_CD_CODIGO := X.CAD_PRD_CD_CODIGO;
    v_AUX_GPC_CD_GRUPOPROC := X.AUX_GPC_CD_GRUPOPROC;
    v_CAD_PRD_ID := X.CAD_PRD_ID;
    nCount := 0;

    SELECT COUNT(*)
      INTO nCount
      FROM TB_ASS_ULP_UNID_LOCAL_PROCED ULP
     WHERE ULP.CAD_UNI_ID_UNIDADE = pCAD_UNI_ID_UNIDADE
       AND ULP.CAD_LAT_ID_LOCAL_ATENDIMENTO = pCAD_LAT_ID_LOCAL_ATENDIMENTO
       AND ULP.AUX_EPP_CD_ESPECPROCED = pAUX_EPP_CD_ESPECPROCED
       AND ULP.TIS_MED_CD_TABELAMEDICA = pTIS_MED_CD_TABELAMEDICA

       AND ULP.AUX_GPC_CD_GRUPOPROC = v_AUX_GPC_CD_GRUPOPROC
       AND ULP.CAD_PRD_CD_CODIGO = v_CAD_PRD_CD_CODIGO
       AND ULP.CAD_PRD_ID = v_CAD_PRD_ID;


    IF (nCount = 0) THEN

      SELECT SEQ_ASS_ULP_01.NextVal INTO lIdtRetorno FROM DUAL;

      INSERT INTO TB_ASS_ULP_UNID_LOCAL_PROCED
    (
       ASS_ULP_ID,
       CAD_UNI_ID_UNIDADE,
       CAD_LAT_ID_LOCAL_ATENDIMENTO,
       AUX_EPP_CD_ESPECPROCED,
       AUX_GPC_CD_GRUPOPROC,
       CAD_PRD_CD_CODIGO,
       ASS_ULP_FL_STATUS,
       ASS_ULP_DT_ULTIMA_ATUALIZACAO,
       SEG_USU_ID_USUARIO,
       CAD_SET_ID,
       AGE_SAU_ID,
       ASS_ULP_QT_HORA_RESERVADA,
       ASS_ULP_FL_LIB_AGE_SADT,
       ASS_ULP_FL_EXI_PREP_AGESADT,
       TIS_MED_CD_TABELAMEDICA,
       CAD_PRD_ID,
       ASS_ULP_HR_LIMITE_AGE_SADT
    )
    VALUES
    (
	     lIdtRetorno,
	     pCAD_UNI_ID_UNIDADE,
	     pCAD_LAT_ID_LOCAL_ATENDIMENTO,
	     lpad(pAUX_EPP_CD_ESPECPROCED, 2, '0'),
	     lpad(v_AUX_GPC_CD_GRUPOPROC, 2, '0'),
	     v_CAD_PRD_CD_CODIGO,
	     'A',
	     sysdate,
	     pSEG_USU_ID_USUARIO,
	     pCAD_SET_ID,
       pAGE_SAU_ID,
       pASS_ULP_QT_HORA_RESERVADA,
       pASS_ULP_FL_LIB_AGE_SADT,
       pASS_ULP_FL_EXI_PREP_AGESADT,
       pTIS_MED_CD_TABELAMEDICA,
       v_CAD_PRD_ID,
       pASS_ULP_HR_LIMITE_AGE_SADT
    );

    END IF;
  END LOOP;

EXCEPTION
  WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR(SQLCODE, SQLERRM);
  pNewIdt := lIdtRetorno;

END PRC_ASS_ULP_UNID_LOCAL_PROCT_I;
/
