--PRC_ATD_IFV_INT_FALTA_VAGA_L
create or replace procedure PRC_ATD_IFV_INT_FALTA_VAGA_L 
(
     pATD_IFV_ID IN TB_ATD_IFV_INT_FALTA_VAGA.ATD_IFV_ID%type DEFAULT NULL,
     pATD_ATE_ID IN TB_ATD_IFV_INT_FALTA_VAGA.ATD_ATE_ID%type DEFAULT NULL,
     pATD_IML_ID IN TB_ATD_IFV_INT_FALTA_VAGA.ATD_IML_ID%type DEFAULT NULL,
     pATD_IFV_DS_JUSTIFICATIVA IN TB_ATD_IFV_INT_FALTA_VAGA.ATD_IFV_DS_JUSTIFICATIVA%type DEFAULT NULL,
     pSEG_USU_ID_USUARIO_DESB IN TB_ATD_IFV_INT_FALTA_VAGA.SEG_USU_ID_USUARIO_DESB%type DEFAULT NULL,
     pATD_IFV_DT_FALTA_VAGA IN TB_ATD_IFV_INT_FALTA_VAGA.ATD_IFV_DT_FALTA_VAGA%type DEFAULT NULL,
     pSEG_USU_ID_USUARIO_REG IN TB_ATD_IFV_INT_FALTA_VAGA.SEG_USU_ID_USUARIO_REG%type DEFAULT NULL,
     pATD_IFV_DT_ULTIMA_ATUALIZACAO IN TB_ATD_IFV_INT_FALTA_VAGA.ATD_IFV_DT_ULTIMA_ATUALIZACAO%type DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
) 
is
/********************************************************************
*    Procedure: PRC_ATD_IFV_INT_FALTA_VAGA_L
* 
*    Data Criacao: 	  24/01/2011           Por: Fabiola Lopes
*    Data Alteracao:	data da alteração  Por: Nome do Analista
*
*    Funcao: Lista registros da TB_ATD_IFV_INT_FALTA_VAGA
*
*******************************************************************/
 v_cursor PKG_CURSOR.t_cursor;
  V_WHERE  varchar2(5000);
  V_SELECT  varchar2(5000);
begin
  V_WHERE := NULL;
  IF pATD_IFV_ID IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_IFV_ID = ' || pATD_IFV_ID; END IF;
  IF pATD_ATE_ID IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_ATE_ID = ' || pATD_ATE_ID; END IF;
  IF pATD_IML_ID IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_IML_ID = ' || pATD_IML_ID; END IF;
  IF pATD_IFV_DS_JUSTIFICATIVA IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_IFV_DS_JUSTIFICATIVA = ' || CHR(39) || pATD_IFV_DS_JUSTIFICATIVA || CHR(39); END IF;
  IF pSEG_USU_ID_USUARIO_DESB IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND SEG_USU_ID_USUARIO_DESB = ' || pSEG_USU_ID_USUARIO_DESB; END IF;
  IF pATD_IFV_DT_FALTA_VAGA IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_IFV_DT_FALTA_VAGA = ' || CHR(39) || pATD_IFV_DT_FALTA_VAGA || CHR(39); END IF;
  IF pSEG_USU_ID_USUARIO_REG IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND SEG_USU_ID_USUARIO_REG = ' || pSEG_USU_ID_USUARIO_REG; END IF;
  IF pATD_IFV_DT_ULTIMA_ATUALIZACAO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_IFV_DT_ULTIMA_ATUALIZACAO = ' || CHR(39) || pATD_IFV_DT_ULTIMA_ATUALIZACAO || CHR(39); END IF;
 
   V_SELECT := '
SELECT	
       ATD_IFV_ID,
       ATD_ATE_ID,
       ATD_IML_ID,
       ATD_IFV_DS_JUSTIFICATIVA,
       SEG_USU_ID_USUARIO_DESB,
       ATD_IFV_DT_FALTA_VAGA,
       SEG_USU_ID_USUARIO_REG,
       ATD_IFV_DT_ULTIMA_ATUALIZACAO
FROM TB_ATD_IFV_INT_FALTA_VAGA
WHERE null is null  ';
       
OPEN v_cursor FOR
  V_SELECT || V_WHERE ;
  io_cursor := v_cursor;
end PRC_ATD_IFV_INT_FALTA_VAGA_L;
