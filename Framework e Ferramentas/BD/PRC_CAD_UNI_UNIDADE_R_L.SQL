
--PRC_CAD_UNI_UNIDADE_R_L
create or replace procedure PRC_CAD_UNI_UNIDADE_R_L 
(
     pCAD_UNI_ID_UNIDADE IN TB_CAD_UNI_UNIDADE.CAD_UNI_ID_UNIDADE%type DEFAULT NULL,
     pCAD_UNI_DS_IMAGEM_ASSOCIADA IN TB_CAD_UNI_UNIDADE.CAD_UNI_DS_IMAGEM_ASSOCIADA%type DEFAULT NULL,
     pCAD_UNI_FL_STATUS IN TB_CAD_UNI_UNIDADE.CAD_UNI_FL_STATUS%type DEFAULT NULL,
     pCAD_UNI_DT_ULTIMO_STATUS IN TB_CAD_UNI_UNIDADE.CAD_UNI_DT_ULTIMO_STATUS%type DEFAULT NULL,
     pCAD_UNI_FL_GRAVA_ATEND_OK IN TB_CAD_UNI_UNIDADE.CAD_UNI_FL_GRAVA_ATEND_OK%type DEFAULT NULL,
     pCAD_UNI_FL_LIBERA_AGENDA_OK IN TB_CAD_UNI_UNIDADE.CAD_UNI_FL_LIBERA_AGENDA_OK%type DEFAULT NULL,
     pCAD_UNI_FL_GRAVA_CD_PAC_OK IN TB_CAD_UNI_UNIDADE.CAD_UNI_FL_GRAVA_CD_PAC_OK%type DEFAULT NULL,
     pCAD_UNI_ID_UNIDADE_MASTER IN TB_CAD_UNI_UNIDADE.CAD_UNI_ID_UNIDADE_MASTER%type DEFAULT NULL,
     pCAD_PES_ID_PESSOA IN TB_CAD_UNI_UNIDADE.CAD_PES_ID_PESSOA%type DEFAULT NULL,
     pCAD_UNI_NR_CNES IN TB_CAD_UNI_UNIDADE.CAD_UNI_NR_CNES%type DEFAULT NULL,
     pCAD_UNI_DT_ULTIMA_ATUALIZACAO IN TB_CAD_UNI_UNIDADE.CAD_UNI_DT_ULTIMA_ATUALIZACAO%type DEFAULT NULL,
     pSEG_USU_ID_USUARIO IN TB_CAD_UNI_UNIDADE.SEG_USU_ID_USUARIO%type DEFAULT NULL,
     pCAD_UNI_CD_HOSPITALAR IN TB_CAD_UNI_UNIDADE.CAD_UNI_CD_HOSPITALAR%type DEFAULT NULL,
     pCAD_UNI_CD_UNID_HOSPITALAR IN TB_CAD_UNI_UNIDADE.CAD_UNI_CD_UNID_HOSPITALAR%type DEFAULT NULL,
     pCAD_UNI_FL_CRONICO_OK IN TB_CAD_UNI_UNIDADE.CAD_UNI_FL_CRONICO_OK%type DEFAULT NULL,
     pCAD_UNI_FL_PRIORIDADE_OK IN TB_CAD_UNI_UNIDADE.CAD_UNI_FL_PRIORIDADE_OK%type DEFAULT NULL,
     pCAD_UNI_DS_UNIDADE IN TB_CAD_UNI_UNIDADE.CAD_UNI_DS_UNIDADE%type DEFAULT NULL,
     pCAD_UNI_FL_LIB_LOC_SETOR_OK IN TB_CAD_UNI_UNIDADE.CAD_UNI_FL_LIB_LOC_SETOR_OK%type DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
) 
is
/********************************************************************
*    Procedure: PRC_CAD_UNI_UNIDADE_R_L
* 
*    Data Criacao: 	data da  criação   Por: Nome do Analista
*    Data Alteracao:	data da alteração  Por: Nome do Analista
*
*    Funcao: Descrição da funcionalidade da Stored Procedure
*
*******************************************************************/
v_cursor PKG_CURSOR.t_cursor;
begin
OPEN v_cursor FOR
SELECT	
       CAD_UNI_ID_UNIDADE,
       CAD_UNI_DS_IMAGEM_ASSOCIADA,
       CAD_UNI_FL_STATUS,
       CAD_UNI_DT_ULTIMO_STATUS,
       CAD_UNI_FL_GRAVA_ATEND_OK,
       CAD_UNI_FL_LIBERA_AGENDA_OK,
       CAD_UNI_FL_GRAVA_CD_PAC_OK,
       CAD_UNI_ID_UNIDADE_MASTER,
       CAD_PES_ID_PESSOA,
       CAD_UNI_NR_CNES,
       CAD_UNI_DT_ULTIMA_ATUALIZACAO,
       SEG_USU_ID_USUARIO,
       CAD_UNI_CD_HOSPITALAR,
       CAD_UNI_CD_UNID_HOSPITALAR,
       CAD_UNI_FL_CRONICO_OK,
       CAD_UNI_FL_PRIORIDADE_OK,
       CAD_UNI_DS_UNIDADE,
       CAD_UNI_FL_LIB_LOC_SETOR_OK
FROM TB_CAD_UNI_UNIDADE
WHERE
        (pCAD_UNI_ID_UNIDADE is null OR CAD_UNI_ID_UNIDADE = pCAD_UNI_ID_UNIDADE) AND 
        (pCAD_UNI_DS_IMAGEM_ASSOCIADA is null OR CAD_UNI_DS_IMAGEM_ASSOCIADA = pCAD_UNI_DS_IMAGEM_ASSOCIADA) AND 
        (pCAD_UNI_FL_STATUS is null OR CAD_UNI_FL_STATUS = pCAD_UNI_FL_STATUS) AND 
        (pCAD_UNI_DT_ULTIMO_STATUS is null OR CAD_UNI_DT_ULTIMO_STATUS = pCAD_UNI_DT_ULTIMO_STATUS) AND 
        (pCAD_UNI_FL_GRAVA_ATEND_OK is null OR CAD_UNI_FL_GRAVA_ATEND_OK = pCAD_UNI_FL_GRAVA_ATEND_OK) AND 
        (pCAD_UNI_FL_LIBERA_AGENDA_OK is null OR CAD_UNI_FL_LIBERA_AGENDA_OK = pCAD_UNI_FL_LIBERA_AGENDA_OK) AND 
        (pCAD_UNI_FL_GRAVA_CD_PAC_OK is null OR CAD_UNI_FL_GRAVA_CD_PAC_OK = pCAD_UNI_FL_GRAVA_CD_PAC_OK) AND 
        (pCAD_UNI_ID_UNIDADE_MASTER is null OR CAD_UNI_ID_UNIDADE_MASTER = pCAD_UNI_ID_UNIDADE_MASTER) AND 
        (pCAD_PES_ID_PESSOA is null OR CAD_PES_ID_PESSOA = pCAD_PES_ID_PESSOA) AND 
        (pCAD_UNI_NR_CNES is null OR CAD_UNI_NR_CNES = pCAD_UNI_NR_CNES) AND 
        (pCAD_UNI_DT_ULTIMA_ATUALIZACAO is null OR CAD_UNI_DT_ULTIMA_ATUALIZACAO = pCAD_UNI_DT_ULTIMA_ATUALIZACAO) AND 
        (pSEG_USU_ID_USUARIO is null OR SEG_USU_ID_USUARIO = pSEG_USU_ID_USUARIO) AND 
        (pCAD_UNI_CD_HOSPITALAR is null OR CAD_UNI_CD_HOSPITALAR = pCAD_UNI_CD_HOSPITALAR) AND 
        (pCAD_UNI_CD_UNID_HOSPITALAR is null OR CAD_UNI_CD_UNID_HOSPITALAR = pCAD_UNI_CD_UNID_HOSPITALAR) AND 
        (pCAD_UNI_FL_CRONICO_OK is null OR CAD_UNI_FL_CRONICO_OK = pCAD_UNI_FL_CRONICO_OK) AND 
        (pCAD_UNI_FL_PRIORIDADE_OK is null OR CAD_UNI_FL_PRIORIDADE_OK = pCAD_UNI_FL_PRIORIDADE_OK) AND 
        (pCAD_UNI_DS_UNIDADE is null OR CAD_UNI_DS_UNIDADE = pCAD_UNI_DS_UNIDADE) AND 
        (pCAD_UNI_FL_LIB_LOC_SETOR_OK is null OR CAD_UNI_FL_LIB_LOC_SETOR_OK = pCAD_UNI_FL_LIB_LOC_SETOR_OK);          
io_cursor := v_cursor;
end PRC_CAD_UNI_UNIDADE_R_L;
