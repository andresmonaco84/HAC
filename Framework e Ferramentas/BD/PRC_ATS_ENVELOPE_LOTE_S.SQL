CREATE OR REPLACE PROCEDURE "PRC_ATS_ENVELOPE_LOTE_S"
  (
     pATS_APR_NR_SEQ_LOTE IN TB_ATS_ARP_ATEN_RESULT_PROCED.ATS_APR_NR_SEQ_LOTE%type default null,
     pATS_ID varchar2 DEFAULT NULL,
     pATS_CD_INTLIB IN varchar2 DEFAULT NULL,
     pATS_PRD_ID IN varchar2 DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
  ) 
  is
  /********************************************************************
  *    Procedure: PRC_ATS_ENVELOPE_LOTE_S
 *
  *
  *******************************************************************/  
  v_cursor PKG_CURSOR.t_cursor;
  V_WHERE  varchar2(2000);
  V_SELECT varchar2(8000);
  begin
    V_WHERE := ' WHERE ATS.ATS_ATE_ID > 0';
    IF pATS_APR_NR_SEQ_LOTE > 0 THEN
       V_WHERE := V_WHERE || ' AND ARP.ATS_APR_NR_SEQ_LOTE = ' || pATS_APR_NR_SEQ_LOTE;
    END IF;
    IF LENGTH(pATS_ID) > 1 THEN
       V_WHERE := V_WHERE || ' AND ARP.ATS_ATE_ID IN (' || pATS_ID || ')';
    END IF;
    IF LENGTH(pATS_CD_INTLIB) > 1 THEN
       V_WHERE := V_WHERE || ' AND ARP.ATS_ATE_CD_INTLIB IN (' || pATS_CD_INTLIB || ')';
    END IF;
    IF LENGTH(pATS_PRD_ID) > 1 THEN
       V_WHERE := V_WHERE || 'AND ARP.CAD_PRD_ID IN (' ||pATS_PRD_ID || ')';
    END IF;
    V_SELECT := 'SELECT 
        ATS.ATS_ATE_ID,
        ATS.ATS_ATE_CD_INTLIB,
        ATS.ATS_ATE_IN_INTLIB INTLIB,
        ARP.ATS_ARP_DT_RESULTADO,
        UNI.CAD_UNI_DS_UNIDADE NOMEUNI,
        LAT.CAD_LAT_DS_LOCAL_ATENDIMENTO,
        SETOR.CAD_SET_DS_SETOR, 
        CNV.CAD_CNV_CD_HAC_PRESTADOR, 
        CNV.CAD_CNV_NM_FANTASIA NOMECONV, 
        PLA.CAD_PLA_CD_PLANO_HAC, 
        PLA.CAD_PLA_NM_NOME_PLANO,
        case when ATS.ATS_ATE_FL_RN = ''S'' then IDR.ATD_IDR_NM_NOME
          --  WHEN PAC.CAD_PAC_IDT_RN = 1 AND PES_PAC.CAD_PES_NM_RN IS NOT NULL THEN PES_PAC.CAD_PES_NM_RN
            ELSE PES_PAC.CAD_PES_NM_PESSOA
        END NOMEPAC,
        
        TRANSF.COD_QUARTO,
        TRANSF.COD_LEITO,
        QUARTO.CD_SETOR,
        TLG.TIS_TLG_DS_TPLOGRADOURO,
        ENDERECO.CAD_END_NM_LOGRADOURO,
        ENDERECO.CAD_END_DS_NUMERO,
        ENDERECO.CAD_END_DS_COMPLEMENTO,
        FNC_ATS_EXAMES_LAUDO(ARP.ATS_APR_NR_SEQ_LOTE, 
                             ARP.ATS_ATE_CD_INTLIB,     
                             ENDERECO.CAD_END_ID_ENDERECO,
                             ARP.ATS_ARP_DT_RESULTADO) CODIGO_EXAME,
        PES_PAC.CAD_PES_NM_RN,
        IDR.ATD_IDR_NM_NOME,
        IDR.ATD_IDR_DT_NASCIMENTO,
        IDR.ATD_IDR_TP_SEXO
       
   FROM TB_ATS_ARP_ATEN_RESULT_PROCED ARP
  INNER JOIN TB_ATS_ATE_ATENDIMENTO_SADT ATS
     ON  ATS.ATS_ATE_CD_INTLIB = ARP.ATS_ATE_CD_INTLIB
    AND ATS.ATS_ATE_IN_INTLIB = ARP.ATS_ATE_IN_INTLIB
    AND ATS.ATS_ATE_ID = ARP.ATS_ATE_ID
    AND ATS.CAD_PRD_ID = ARP.CAD_PRD_ID
    AND ATS.AUX_EPP_CD_ESPECPROC = ARP.ATS_EPP_CD_ESPECPROC
    AND ATS.TIS_MED_CD_TABELAMEDICA = ARP.TIS_MED_CD_TABELAMEDICA
  INNER JOIN TB_CAD_PAC_PACIENTE PAC
     ON PAC.CAD_PAC_ID_PACIENTE = ATS.CAD_PAC_ID_PACIENTE_INT
  INNER JOIN TB_CAD_PES_PESSOA PES_PAC
     ON PES_PAC.CAD_PES_ID_PESSOA = PAC.CAD_PES_ID_PESSOA
  INNER JOIN TB_CAD_PLA_PLANO PLA 
     ON PLA.CAD_PLA_ID_PLANO = PAC.CAD_PLA_ID_PLANO
  INNER JOIN TB_CAD_CNV_CONVENIO CNV
     ON CNV.CAD_CNV_ID_CONVENIO = PAC.CAD_CNV_ID_CONVENIO
  INNER JOIN TB_CAD_SET_SETOR SETOR
     ON SETOR.CAD_SET_ID = ATS.CAD_SET_ID
  INNER JOIN TB_CAD_UNI_UNIDADE UNI
     ON UNI.CAD_UNI_ID_UNIDADE = ARP.CAD_UNI_ID_UNIDADE
  INNER JOIN TB_CAD_LAT_LOCAL_ATENDIMENTO LAT
     ON LAT.CAD_LAT_ID_LOCAL_ATENDIMENTO = SETOR.CAD_LAT_ID_LOCAL_ATENDIMENTO
  INNER JOIN TB_CAD_END_ENDERECO ENDERECO
     ON ENDERECO.CAD_PES_ID_PESSOA = UNI.CAD_PES_ID_PESSOA
    AND ENDERECO.AUX_TTE_CD_TP_TEL_END = 12
  INNER JOIN TB_TIS_TLG_TP_LOGRADOURO TLG
     ON TLG.TIS_TLG_CD_TPLOGRADOURO = ENDERECO.TIS_TLG_CD_TPLOGRADOURO 
-- o JOIN abaixo eh para obter o quarto, o leito e o setor
   LEFT JOIN TB_INTERNADO INTER
     ON INTER.NR_SEQINTER = ATS.ATS_ATE_CD_INTLIB
    AND INTER.CD_ALTA IN (999,21)
   LEFT JOIN TB_TRANSFERENCIA TRANSF
     ON TRANSF.NR_SEQINTER = INTER.NR_SEQINTER
    AND TRANSF.DT_SAIDA IS NULL
   LEFT JOIN TB_QUARTO QUARTO ON QUARTO.COD_QUARTO = TRANSF.COD_QUARTO
   LEFT JOIN TB_ATD_IDR_INT_DADOS_RN IDR ON IDR.ATD_IDR_ID = ATS.ATS_ATE_ID_RN'
  || V_WHERE ;
  V_SELECT := V_SELECT ||
  ' GROUP BY
          ATS.ATS_ATE_ID, 
          ATS.ATS_ATE_CD_INTLIB,
          ATS.ATS_ATE_IN_INTLIB,
          ARP.ATS_ARP_DT_RESULTADO,
          ARP.ATS_APR_NR_SEQ_DIGITACAO,
          UNI.CAD_UNI_DS_UNIDADE ,
          LAT.CAD_LAT_DS_LOCAL_ATENDIMENTO,
          SETOR.CAD_SET_DS_SETOR, 
          CNV.CAD_CNV_CD_HAC_PRESTADOR, 
          CNV.CAD_CNV_NM_FANTASIA, 
          PLA.CAD_PLA_CD_PLANO_HAC, 
          PLA.CAD_PLA_NM_NOME_PLANO,
          case when ATS.ATS_ATE_FL_RN = ''S'' then IDR.ATD_IDR_NM_NOME
          --  WHEN PAC.CAD_PAC_IDT_RN = 1 AND PES_PAC.CAD_PES_NM_RN IS NOT NULL THEN PES_PAC.CAD_PES_NM_RN
            ELSE PES_PAC.CAD_PES_NM_PESSOA
            END,
          TRANSF.COD_QUARTO,
          TRANSF.COD_LEITO,
          QUARTO.CD_SETOR,
          TLG.TIS_TLG_DS_TPLOGRADOURO,
          ENDERECO.CAD_END_NM_LOGRADOURO,
          ENDERECO.CAD_END_DS_NUMERO,
          ENDERECO.CAD_END_DS_COMPLEMENTO,
          FNC_ATS_EXAMES_LAUDO(ARP.ATS_APR_NR_SEQ_LOTE, 
                               ARP.ATS_ATE_CD_INTLIB,     
                               ENDERECO.CAD_END_ID_ENDERECO,
                               ARP.ATS_ARP_DT_RESULTADO),
        PES_PAC.CAD_PES_NM_RN,
        IDR.ATD_IDR_NM_NOME,
        IDR.ATD_IDR_DT_NASCIMENTO,
        IDR.ATD_IDR_TP_SEXO
  ORDER BY ARP.ATS_APR_NR_SEQ_DIGITACAO ';
    OPEN v_cursor FOR
    V_SELECT;
  io_cursor := v_cursor;
end PRC_ATS_ENVELOPE_LOTE_S;
