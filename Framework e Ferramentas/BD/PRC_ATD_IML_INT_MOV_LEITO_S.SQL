create or replace procedure PRC_ATD_IML_INT_MOV_LEITO_S 
(
     pATD_ATE_ID IN TB_ATD_IML_INT_MOV_LEITO.ATD_ATE_ID%type DEFAULT NULL,
     pATD_IML_DT_ENTRADA IN TB_ATD_IML_INT_MOV_LEITO.ATD_IML_DT_ENTRADA%type DEFAULT NULL,
     pATD_IML_HR_ENTRADA IN TB_ATD_IML_INT_MOV_LEITO.ATD_IML_HR_ENTRADA%type DEFAULT NULL,
     pATD_IML_DT_SAIDA IN TB_ATD_IML_INT_MOV_LEITO.ATD_IML_DT_SAIDA%type DEFAULT NULL,
     pATD_IML_HR_SAIDA IN TB_ATD_IML_INT_MOV_LEITO.ATD_IML_HR_SAIDA%type DEFAULT NULL,
     pCAD_CAD_QLE_ID IN TB_ATD_IML_INT_MOV_LEITO.CAD_CAD_QLE_ID%type DEFAULT NULL,
     pATD_IML_DT_ULTIMA_ATUALIZACAO IN TB_ATD_IML_INT_MOV_LEITO.ATD_IML_DT_ULTIMA_ATUALIZACAO%type DEFAULT NULL,
     pSEG_USU_ID_USUARIO IN TB_ATD_IML_INT_MOV_LEITO.SEG_USU_ID_USUARIO%type DEFAULT NULL,
     pCAD_PAC_ID_PACIENTE IN TB_ATD_IML_INT_MOV_LEITO.CAD_PAC_ID_PACIENTE%type DEFAULT NULL,
     pTIS_TAC_CD_TIPO_ACOMODACAO IN TB_ATD_IML_INT_MOV_LEITO.TIS_TAC_CD_TIPO_ACOMODACAO%type DEFAULT NULL,
     pATD_IML_FL_STATUS IN TB_ATD_IML_INT_MOV_LEITO.ATD_IML_FL_STATUS%type DEFAULT NULL,
     pATD_IML_FL_CORTESIA IN TB_ATD_IML_INT_MOV_LEITO.ATD_IML_FL_CORTESIA%type DEFAULT NULL,
     pATD_IML_FL_DIF_CLASSE IN TB_ATD_IML_INT_MOV_LEITO.ATD_IML_FL_DIF_CLASSE%type DEFAULT NULL,
     pATD_IML_ID IN TB_ATD_IML_INT_MOV_LEITO.ATD_IML_ID%type DEFAULT NULL,
     pATD_IML_FL_FALTA_VAGA IN TB_ATD_IML_INT_MOV_LEITO.ATD_IML_FL_FALTA_VAGA%type DEFAULT NULL,
     pTIS_TAC_CD_TIPO_ACOMOD_AUT IN TB_ATD_IML_INT_MOV_LEITO.TIS_TAC_CD_TIPO_ACOMOD_AUT%TYPE DEFAULT NULL,
     pATD_IML_DT_INI_ACOMOD_AUT IN TB_ATD_IML_INT_MOV_LEITO.ATD_IML_DT_INI_ACOMOD_AUT%TYPE DEFAULT NULL,
     pATD_IML_HR_INI_ACOMOD_AUT IN TB_ATD_IML_INT_MOV_LEITO.ATD_IML_HR_INI_ACOMOD_AUT%TYPE DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
) 
is
/********************************************************************
*    Procedure: PRC_ATD_IML_INT_MOV_LEITO_S
* 
*    Data Criacao: 	data da  cria√ß√£o   Por: Nome do Analista
*    Data Alteracao:	24/01/2011       Por: Fabiola Lopes
*    Data Alteracao:    14/05/2011       Por: Fabiola Lopes
*
*    Funcao: Descri√ß√£o da funcionalidade da Stored Procedure
*
*    Alteracao: Inclus„o do campo ATD_IML_FL_FALTA_VAGA
*    Alteracao: Inclus„o dos campos TIS_TAC_CD_TIPO_ACOMOD_AUT, ATD_IML_DT_INI_ACOMOD_AUT e ATD_IML_HR_INI_ACOMOD_AUT
*
*******************************************************************/
  v_cursor PKG_CURSOR.t_cursor;
  V_WHERE  varchar2(5000);
  V_SELECT  varchar2(5000);
begin
  V_WHERE := NULL;
  IF PATD_ATE_ID IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND ATD_ATE_ID = ' || PATD_ATE_ID;
  END IF;
  IF PATD_IML_DT_ENTRADA IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND ATD_IML_DT_ENTRADA = ' || CHR(39) ||
               PATD_IML_DT_ENTRADA || CHR(39);
  END IF;
  IF PATD_IML_HR_ENTRADA IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND ATD_IML_HR_ENTRADA = ' ||
               PATD_IML_HR_ENTRADA;
  END IF;
  IF PATD_IML_DT_SAIDA IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND ATD_IML_DT_SAIDA = ' || CHR(39) ||
               PATD_IML_DT_SAIDA || CHR(39);
  END IF;
  IF PATD_IML_HR_SAIDA IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND ATD_IML_HR_SAIDA = ' || PATD_IML_HR_SAIDA;
  END IF;
  IF PCAD_CAD_QLE_ID IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND CAD_CAD_QLE_ID = ' || PCAD_CAD_QLE_ID;
  END IF;
  IF PATD_IML_DT_ULTIMA_ATUALIZACAO IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND ATD_IML_DT_ULTIMA_ATUALIZACAO = ' ||
               CHR(39) || PATD_IML_DT_ULTIMA_ATUALIZACAO || CHR(39);
  END IF;
  IF PSEG_USU_ID_USUARIO IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND SEG_USU_ID_USUARIO = ' ||
               PSEG_USU_ID_USUARIO;
  END IF;
  IF PCAD_PAC_ID_PACIENTE IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND CAD_PAC_ID_PACIENTE = ' ||
               PCAD_PAC_ID_PACIENTE;
  END IF;
  IF PTIS_TAC_CD_TIPO_ACOMODACAO IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND TIS_TAC_CD_TIPO_ACOMODACAO = ' || CHR(39) ||
               PTIS_TAC_CD_TIPO_ACOMODACAO || CHR(39);
  END IF;
  IF PATD_IML_FL_STATUS IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND ATD_IML_FL_STATUS = ' || CHR(39) ||
               PATD_IML_FL_STATUS || CHR(39);
  END IF;
  IF PATD_IML_FL_CORTESIA IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND ATD_IML_FL_CORTESIA = ' || CHR(39) ||
               PATD_IML_FL_CORTESIA || CHR(39);
  END IF;
  IF PATD_IML_FL_DIF_CLASSE IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND ATD_IML_FL_DIF_CLASSE = ' || CHR(39) ||
               PATD_IML_FL_DIF_CLASSE || CHR(39);
  END IF;
  IF PATD_IML_ID IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND ATD_IML_ID = ' || PATD_IML_ID;
  END IF;
  IF PATD_IML_FL_FALTA_VAGA IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND ATD_IML_FL_FALTA_VAGA = ' ||
               PATD_IML_FL_FALTA_VAGA;
  END IF;
  IF pTIS_TAC_CD_TIPO_ACOMOD_AUT IS NOT NULL THEN
    V_WHERE := V_WHERE || ' AND TIS_TAC_CD_TIPO_ACOMOD_AUT = ' ||
               pTIS_TAC_CD_TIPO_ACOMOD_AUT;
  END IF;             
  IF pATD_IML_DT_INI_ACOMOD_AUT IS NOT NULL THEN
	V_WHERE := V_WHERE || ' AND ATD_IML_DT_INI_ACOMOD_AUT = ' ||
			   pATD_IML_DT_INI_ACOMOD_AUT;
  END IF;			   
  IF pATD_IML_HR_INI_ACOMOD_AUT IS NOT NULL THEN
	V_WHERE := V_WHERE || ' AND ATD_IML_HR_INI_ACOMOD_AUT = ' ||
			   pATD_IML_HR_INI_ACOMOD_AUT;
  END IF;
 
   V_SELECT := '
SELECT	
       ATD_ATE_ID,
       ATD_IML_DT_ENTRADA,
       ATD_IML_HR_ENTRADA,
       ATD_IML_DT_SAIDA,
       ATD_IML_HR_SAIDA,
       CAD_CAD_QLE_ID,
       ATD_IML_DT_ULTIMA_ATUALIZACAO,
       SEG_USU_ID_USUARIO,
       CAD_PAC_ID_PACIENTE,
       TIS_TAC_CD_TIPO_ACOMODACAO,
       ATD_IML_FL_STATUS,
       ATD_IML_FL_CORTESIA,
       ATD_IML_FL_DIF_CLASSE,
       ATD_IML_ID,
       ATD_IML_FL_FALTA_VAGA,
	   TIS_TAC_CD_TIPO_ACOMOD_AUT,
       ATD_IML_DT_INI_ACOMOD_AUT,
       ATD_IML_HR_INI_ACOMOD_AUT
FROM TB_ATD_IML_INT_MOV_LEITO
WHERE null is null  ' ;
       
OPEN v_cursor FOR
  V_SELECT || V_WHERE ;
  io_cursor := v_cursor;
end PRC_ATD_IML_INT_MOV_LEITO_S;