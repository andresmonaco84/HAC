create or replace procedure PRC_ASS_CPR_RPG_PAGTO_S
(
     pCAD_CLC_ID IN TB_CAD_CLC_CLINICA_CREDENCIADA.CAD_CLC_ID%type,
     pCAD_REP_ID IN TB_CAD_REP_REGRA_PAGAMENTO.CAD_REP_ID%type,
     io_cursor OUT PKG_CURSOR.t_cursor
)
is
/********************************************************************
*    Procedure: PRC_ASS_CPR_RPG_PAGTO_S
*
*    Data Criacao:   data da  criação   Por: Nome do Analista
*    Data Alteracao:  data da alteração  Por: Nome do Analista
*
*    Funcao: Descrição da funcionalidade da Stored Procedure
*
*******************************************************************/
v_cursor PKG_CURSOR.t_cursor;
begin
OPEN v_cursor FOR
/*SELECT
       RPG.ASS_CPR_ID,
       RPG.CAD_REP_ID,
       RPG.CAD_REP_DT_INICIO_VIGENCIA,
       RPG.CAD_REP_DT_FIM_VIGENCIA,
       RPG.SEG_USU_ID_USUARIO,
       RPG.CAD_REP_DT_ULTIMA_ATUALIZACAO,
       RPG.ASS_RPG_ID,

       REP.CAD_REP_NM_REGRA,
       CLC.CAD_CLC_DS_DESCRICAO

FROM TB_ASS_RPG_REGRA_PAGTO RPG,
     TB_CAD_REP_REGRA_PAGAMENTO REP,
     TB_ASS_CPR_CLINICA_PROF CPR,
     TB_CAD_CLC_CLINICA_CREDENCIADA CLC

WHERE
     RPG.CAD_REP_ID = REP.CAD_REP_ID
 AND RPG.ASS_CPR_ID = CPR.ASS_CPR_ID
 AND (pCAD_CLC_ID IS NULL OR CPR.CAD_CLC_ID = pCAD_CLC_ID)
 AND (pCAD_REP_ID IS NULL OR RPG.CAD_REP_ID = pCAD_REP_ID)
 AND CPR.CAD_CLC_ID = CLC.CAD_CLC_ID;*/

SELECT     RPG.ASS_CPR_ID,
           RPG.CAD_REP_ID,
           RPG.CAD_REP_DT_INICIO_VIGENCIA,
           RPG.CAD_REP_DT_FIM_VIGENCIA,
           RPG.SEG_USU_ID_USUARIO,
           RPG.CAD_REP_DT_ULTIMA_ATUALIZACAO,
           RPG.ASS_RPG_ID,

           REP.CAD_REP_NM_REGRA,
           CLC.CAD_CLC_DS_DESCRICAO,

           DECODE(UNI.CAD_UNI_DS_UNIDADE, NULL, 'TODAS', UNI.CAD_UNI_DS_UNIDADE) CAD_UNI_DS_UNIDADE,

           DECODE(LAT.CAD_LAT_DS_LOCAL_ATENDIMENTO, NULL, 'TODOS', LAT.CAD_LAT_DS_LOCAL_ATENDIMENTO) CAD_LAT_DS_LOCAL_ATENDIMENTO,

           DECODE(SETOR.CAD_SET_DS_SETOR, NULL, 'TODOS', SETOR.CAD_SET_DS_SETOR) CAD_SET_DS_SETOR,

           PRO.CAD_PRO_SG_UF_CONSELHO,
           PRO.TIS_CPR_CD_CONSELHOPROF,
           PRO.CAD_PRO_NR_CONSELHO,
           DECODE(PRO.CAD_PRO_NM_NOME, NULL, 'TODOS', PRO.CAD_PRO_NM_NOME) CAD_PRO_NM_NOME,

           CBO.TIS_CBO_CD_CBOS,
           DECODE(CBO.TIS_CBO_DS_CBOS, NULL, 'TODAS', CBO.TIS_CBO_DS_CBOS) TIS_CBO_DS_CBOS,

           DECODE(PRD.CAD_PRD_DS_DESCRICAO, NULL, 'TODOS', PRD.CAD_PRD_DS_DESCRICAO) CAD_PRD_DS_DESCRICAO,

           CPR.TIS_MED_CD_TABELAMEDICA,
           DECODE(MED.TIS_MED_DS_TABELAMEDICA, NULL, 'TODAS', MED.TIS_MED_DS_TABELAMEDICA) TIS_MED_DS_TABELAMEDICA,

           CPR.AUX_EPP_CD_ESPECPROC,
           DECODE(EPP.AUX_EPP_DS_DESCRICAO, NULL, 'TODOS', EPP.AUX_EPP_DS_DESCRICAO) AUX_EPP_DS_DESCRICAO,

           CPR.AUX_GPC_CD_GRUPOPROC,
           DECODE(GPC.AUX_GPC_DS_DESCRICAO, NULL, 'TODOS', GPC.AUX_GPC_DS_DESCRICAO) AUX_GPC_DS_DESCRICAO,

           PLA.CAD_PLA_CD_PLANO_HAC,
           DECODE(PLA.CAD_PLA_NM_NOME_PLANO, NULL, 'TODOS', PLA.CAD_PLA_NM_NOME_PLANO) CAD_PLA_NM_NOME_PLANO,

           CNV.CAD_CNV_CD_HAC_PRESTADOR,
           DECODE(CNV.CAD_CNV_DS_RAZAOSOCIAL, NULL, 'TODOS', CNV.CAD_CNV_DS_RAZAOSOCIAL) CAD_CNV_DS_RAZAOSOCIAL,

           CPR.CAD_TPE_CD_CODIGO,
           DECODE(TPE.CAD_TPE_DS_DESCRICAO, NULL, 'TODOS', TPE.CAD_TPE_DS_DESCRICAO) CAD_TPE_DS_DESCRICAO

      FROM
           TB_CAD_PRO_PROFISSIONAL        PRO,
           TB_CAD_PRD_PRODUTO             PRD,
           TB_CAD_CNV_CONVENIO            CNV,
           TB_CAD_PLA_PLANO               PLA,
           TB_CAD_UNI_UNIDADE             UNI,
           TB_CAD_LAT_LOCAL_ATENDIMENTO   LAT,
           TB_CAD_SET_SETOR               SETOR,
           TB_TIS_CBO_CBOS                CBO,
           TB_CAD_TPE_TIPOEMPRESA         TPE,
           TB_CAD_CLC_CLINICA_CREDENCIADA CLC,
           TB_TIS_MED_TABELAMEDICA        MED,
           TB_AUX_EPP_ESPECPROC           EPP,
           TB_AUX_GPC_GRUPOPROC           GPC,

           TB_ASS_CPR_CLINICA_PROF        CPR,
           TB_ASS_RPG_REGRA_PAGTO         RPG,
           TB_CAD_REP_REGRA_PAGAMENTO     REP

     WHERE CPR.CAD_PRO_ID_PROFISSIONAL = PRO.CAD_PRO_ID_PROFISSIONAL
       AND CPR.TIS_CBO_CD_CBOS = CBO.TIS_CBO_CD_CBOS(+)
       AND CPR.CAD_PRD_ID = PRD.CAD_PRD_ID(+)
       AND CPR.CAD_CNV_ID_CONVENIO = CNV.CAD_CNV_ID_CONVENIO(+)
       AND CPR.CAD_PLA_ID_PLANO = PLA.CAD_PLA_ID_PLANO(+)
       AND CPR.CAD_UNI_ID_UNIDADE = UNI.CAD_UNI_ID_UNIDADE(+)
       AND CPR.CAD_LAT_ID_LOCAL_ATENDIMENTO = LAT.CAD_LAT_ID_LOCAL_ATENDIMENTO(+)
       AND CPR.CAD_SET_ID = SETOR.CAD_SET_ID(+)
       AND CPR.CAD_TPE_CD_CODIGO = TPE.CAD_TPE_CD_CODIGO(+)
       AND CPR.CAD_CLC_ID = CLC.CAD_CLC_ID
       AND CPR.TIS_MED_CD_TABELAMEDICA = MED.TIS_MED_CD_TABELAMEDICA(+)
       AND CPR.AUX_EPP_CD_ESPECPROC = EPP.AUX_EPP_CD_ESPECPROC(+)
       AND CPR.TIS_MED_CD_TABELAMEDICA = EPP.TIS_MED_CD_TABELAMEDICA(+)
       AND CPR.AUX_GPC_CD_GRUPOPROC = GPC.AUX_GPC_CD_GRUPOPROC(+)
       AND CPR.AUX_EPP_CD_ESPECPROC = GPC.AUX_EPP_CD_ESPECPROC(+)
       AND CPR.TIS_MED_CD_TABELAMEDICA = GPC.TIS_MED_CD_TABELAMEDICA(+)
       AND (pCAD_CLC_ID IS NULL OR CPR.CAD_CLC_ID = pCAD_CLC_ID)
       AND (pCAD_REP_ID IS NULL OR RPG.CAD_REP_ID = pCAD_REP_ID)
        AND RPG.ASS_CPR_ID = CPR.ASS_CPR_ID
       AND REP.CAD_REP_ID = RPG.CAD_REP_ID;

io_cursor := v_cursor;
end PRC_ASS_CPR_RPG_PAGTO_S;
