create or replace procedure PRC_AGE_REL_ESTATISTICA_USU
  (
     pDT_INICIO_CONSULTA IN TB_AGE_AGD_AGENDA.AGE_AGD_DT_ATENDIMENTO%TYPE,
     pDT_FIM_CONSULTA    IN TB_AGE_AGD_AGENDA.AGE_AGD_DT_ATENDIMENTO%TYPE,
     pCAD_UNI_ID_UNIDADE IN TB_CAD_UNI_UNIDADE.CAD_UNI_ID_UNIDADE%TYPE DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
  )
  is
  /********************************************************************
  *    Procedure: PRC_AGE_REL_ESTATISTICA_USU
  *
  *   Data Alteracao:   10/6/2016    Por: Cristiane Gomes
  *   Alteracao: UNI LOGADO DO USU AGD.CAD_UNI_ID_UNID_LOGIN_USU
  *
  *******************************************************************/
  v_cursor PKG_CURSOR.t_cursor;
  begin
  
      OPEN v_cursor FOR
SELECT  USU.SEG_USU_DS_NOME NOME_USUARIO, USU.SEG_USU_CD_MATRICULA MATRICULA, UNI.CAD_UNI_DS_UNIDADE NOME_UNIDADE,
       NVL(AGD.TOTAL_MARCADOS,0) TOTAL_MARCADOS,
       NVL(AGC.TOTAL_CANCELADOS,0) TOTAL_CANCELADOS
        
        FROM (SELECT DISTINCT ESM.CAD_UNI_ID_UNIDADE FROM TB_AGE_AGD_AGENDA AGD 
             JOIN TB_AGE_ESM_ESCALA_MEDICA ESM ON ESM.AGE_ESM_ID = AGD.AGE_ESM_ID
             WHERE TRUNC(AGD.AGE_AGD_DT_AGENDA) BETWEEN pDT_INICIO_CONSULTA AND pDT_FIM_CONSULTA 
             UNION SELECT DISTINCT ESM.CAD_UNI_ID_UNIDADE FROM TB_AGE_AGC_AGENDA_CANCELADA AGC
             JOIN TB_AGE_ESM_ESCALA_MEDICA ESM ON ESM.AGE_ESM_ID = AGC.AGE_ESM_ID
             WHERE TRUNC(AGC.AGE_AGD_DT_AGENDA) BETWEEN pDT_INICIO_CONSULTA AND pDT_FIM_CONSULTA ) AUNI
     
       CROSS JOIN (SELECT DISTINCT AGD.SEG_USU_ID_USUARIO FROM TB_AGE_AGD_AGENDA AGD 
             WHERE TRUNC(AGD.AGE_AGD_DT_AGENDA) BETWEEN pDT_INICIO_CONSULTA AND pDT_FIM_CONSULTA 
             UNION SELECT DISTINCT AGC.SEG_USU_ID_USUARIO FROM TB_AGE_AGC_AGENDA_CANCELADA AGC 
             WHERE TRUNC(AGC.AGE_AGD_DT_AGENDA) BETWEEN pDT_INICIO_CONSULTA AND pDT_FIM_CONSULTA)  AUSU    
       JOIN TB_CAD_UNI_UNIDADE UNI ON UNI.CAD_UNI_ID_UNIDADE = AUNI.CAD_UNI_ID_UNIDADE
       JOIN TB_SEG_USU_USUARIO USU ON USU.SEG_USU_ID_USUARIO = AUSU.SEG_USU_ID_USUARIO
       
       LEFT JOIN (SELECT COUNT(AGC.AGE_AGD_ID) TOTAL_CANCELADOS, AGC.SEG_USU_ID_USUARIO, ESM1.CAD_UNI_ID_UNIDADE  
                   FROM TB_AGE_AGC_AGENDA_CANCELADA AGC 
                   LEFT JOIN TB_AGE_ESM_ESCALA_MEDICA ESM1 ON ESM1.AGE_ESM_ID = AGC.AGE_ESM_ID                   
                   WHERE TRUNC(AGC.AGE_AGD_DT_AGENDA) BETWEEN pDT_INICIO_CONSULTA AND pDT_FIM_CONSULTA
                    AND (pCAD_UNI_ID_UNIDADE IS NULL OR AGC.CAD_UNI_ID_UNID_LOGIN_USU = pCAD_UNI_ID_UNIDADE)
                   GROUP BY AGC.SEG_USU_ID_USUARIO, ESM1.CAD_UNI_ID_UNIDADE  
                  ) AGC ON AGC.SEG_USU_ID_USUARIO = AUSU.SEG_USU_ID_USUARIO 
                       AND AGC.CAD_UNI_ID_UNIDADE = AUNI.CAD_UNI_ID_UNIDADE
                           AND (pCAD_UNI_ID_UNIDADE IS NULL OR EXISTS
                       (SELECT * FROM TB_SEG_UUN_USUARIO_UNIDADE UUN WHERE UUN.SEG_USU_ID_USUARIO = AUSU.SEG_USU_ID_USUARIO AND UUN.CAD_UNI_ID_UNIDADE = pCAD_UNI_ID_UNIDADE))
                                  
       LEFT JOIN (SELECT COUNT(AGD.AGE_AGD_ID) TOTAL_MARCADOS, AGD.SEG_USU_ID_USUARIO, ESM1.CAD_UNI_ID_UNIDADE  
                   FROM TB_AGE_AGD_AGENDA AGD 
                   LEFT JOIN TB_AGE_ESM_ESCALA_MEDICA ESM1 ON ESM1.AGE_ESM_ID = AGD.AGE_ESM_ID                   
                   WHERE TRUNC(AGD.AGE_AGD_DT_AGENDA) BETWEEN pDT_INICIO_CONSULTA AND pDT_FIM_CONSULTA
                    AND (pCAD_UNI_ID_UNIDADE IS NULL OR AGD.CAD_UNI_ID_UNID_LOGIN_USU = pCAD_UNI_ID_UNIDADE)
                   GROUP BY AGD.SEG_USU_ID_USUARIO, ESM1.CAD_UNI_ID_UNIDADE  
                     ) AGD ON AGD.SEG_USU_ID_USUARIO = AUSU.SEG_USU_ID_USUARIO
                     AND AGD.CAD_UNI_ID_UNIDADE = AUNI.CAD_UNI_ID_UNIDADE
                           AND (pCAD_UNI_ID_UNIDADE IS NULL OR EXISTS
                       (SELECT * FROM TB_SEG_UUN_USUARIO_UNIDADE UUN WHERE UUN.SEG_USU_ID_USUARIO = AUSU.SEG_USU_ID_USUARIO AND UUN.CAD_UNI_ID_UNIDADE = pCAD_UNI_ID_UNIDADE))

    WHERE (NVL(AGD.TOTAL_MARCADOS,0) > 0 OR  NVL(AGC.TOTAL_CANCELADOS,0) > 0)
                         
    GROUP BY USU.SEG_USU_DS_NOME, USU.SEG_USU_CD_MATRICULA, UNI.CAD_UNI_DS_UNIDADE,
       NVL(AGD.TOTAL_MARCADOS,0) , NVL(AGC.TOTAL_CANCELADOS,0) 
       
      
     ;
   io_cursor := v_cursor;

 end PRC_AGE_REL_ESTATISTICA_USU;
/
