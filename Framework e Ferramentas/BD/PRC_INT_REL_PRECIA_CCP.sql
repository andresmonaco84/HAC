create or replace procedure PRC_INT_REL_PRECIA_CCP(pATD_ATE_DT_ATENDIMENTO_INI   IN TB_ATD_ATE_ATENDIMENTO.ATD_ATE_DT_ATENDIMENTO%TYPE DEFAULT NULL,
                                                   pATD_ATE_DT_ATENDIMENTO_FIM   IN TB_ATD_ATE_ATENDIMENTO.ATD_ATE_DT_ATENDIMENTO%TYPE DEFAULT NULL,
                                                   pCAD_CNV_ID_CONVENIO          IN TB_CAD_CNV_CONVENIO.CAD_CNV_ID_CONVENIO%TYPE DEFAULT NULL,
                                                   pCAD_PLA_ID_PLANO             IN TB_CAD_PLA_PLANO.CAD_PLA_ID_PLANO%TYPE DEFAULT NULL,
                                                   pCAD_UNI_ID_UNIDADE           IN TB_CAD_UNI_UNIDADE.CAD_UNI_ID_UNIDADE%TYPE DEFAULT NULL,
                                                   pCAD_LAT_ID_LOCAL_ATENDIMENTO IN TB_CAD_LAT_LOCAL_ATENDIMENTO.CAD_LAT_ID_LOCAL_ATENDIMENTO%TYPE DEFAULT NULL,
                                                   pCAD_SET_ID                   IN TB_CAD_SET_SETOR.CAD_SET_ID%TYPE DEFAULT null,
                                                   pCAD_PLA_CD_TIPOPLANO_GB IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL, --ACS
                                                  pCAD_PLA_CD_TIPOPLANO_PL IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL, --ACS
                                                  pCAD_PLA_CD_TIPOPLANO_FU IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
                                                  pCAD_PLA_CD_TIPOPLANO_NP IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
                                                  pCAD_PLA_CD_TIPOPLANO_PA IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
                                                  pCAD_PLA_CD_TIPOPLANO_SP IN TB_CAD_PLA_PLANO.CAD_PLA_CD_TIPOPLANO%TYPE DEFAULT NULL,
                                                  pCAD_CGC_ID_G IN TB_CAD_CNV_CONVENIO.CAD_CGC_ID%TYPE DEFAULT NULL,
                                                  pCAD_CGC_ID_E IN TB_CAD_CNV_CONVENIO.CAD_CGC_ID%TYPE DEFAULT NULL,
                                                   pLOTE                         varchar2 default null,
                                                   io_cursor                     OUT PKG_CURSOR.t_cursor) is
  /********************************************************************
  *    Procedure: PRC_INT_REL_PRECIA_CCP
  *
  *    Data Criacao: 07/6/2010                    Por: pedro
  *    Funcao: Popula o Relatorio Previa de Parcelamento (proxima parcela do paciente)
  *
  *******************************************************************/
  v_cursor                     PKG_CURSOR.t_cursor;
  V_ATD_ATE_DT_ATENDIMENTO_INI DATE;
  V_ATD_ATE_DT_ATENDIMENTO_FIM DATE;
begin
  -- PRC_PARCELAMENTO_SGS(PATD_ATE_DT_ATENDIMENTO_INI); --popula a TB_TMP_CPR_CONTA_PARC_REL
  V_ATD_ATE_DT_ATENDIMENTO_INI := pATD_ATE_DT_ATENDIMENTO_INI;
  V_ATD_ATE_DT_ATENDIMENTO_FIM := pATD_ATE_DT_ATENDIMENTO_FIM;
  --SE UM DOS PARAMETROS DE DATA NAO FOI INFORMADO IGUALA O OUTRO PARAMETRO COM A MESMA DATA INFORMADA
  IF ((V_ATD_ATE_DT_ATENDIMENTO_INI IS NOT NULL AND     V_ATD_ATE_DT_ATENDIMENTO_FIM IS NULL) OR
     (V_ATD_ATE_DT_ATENDIMENTO_INI IS NULL AND     V_ATD_ATE_DT_ATENDIMENTO_FIM IS NOT NULL)) THEN
    IF V_ATD_ATE_DT_ATENDIMENTO_INI IS NOT NULL THEN      V_ATD_ATE_DT_ATENDIMENTO_FIM := V_ATD_ATE_DT_ATENDIMENTO_INI;
    END IF;
    IF V_ATD_ATE_DT_ATENDIMENTO_FIM IS NOT NULL THEN      V_ATD_ATE_DT_ATENDIMENTO_INI := V_ATD_ATE_DT_ATENDIMENTO_FIM;
    END IF;
  END IF;
  --SE NENHUM DOS PARAMETROS DE DATA FOI INFORMADO CONSIDERA A DATA ATUAL COMO PARAMETRO
  IF (V_ATD_ATE_DT_ATENDIMENTO_INI IS NULL AND V_ATD_ATE_DT_ATENDIMENTO_FIM IS NULL) THEN
        V_ATD_ATE_DT_ATENDIMENTO_INI := TRUNC(SYSDATE);
--    V_ATD_ATE_DT_ATENDIMENTO_FIM := TRUNC(SYSDATE);
  END IF;
  OPEN v_cursor FOR
    --SELECT CCP.ATD_ATE_ID,CCP.FAT_CCP_DT_PARCELA_INI,CCP.* FROM TB_FAT_CCP_CONTA_CONS_PARC CCP WHERE CCP.ATD_ATE_ID IN (26339162,26635731,26442981,  26443876,26637066,26442590) ;
  -- SELECT CCP.ATD_ATE_ID,CCP.FAT_CCP_DT_PARCELA_INI,CCP.* FROM TB_FAT_CCP_CONTA_CONS_PARC CCP WHERE CCP.ATD_ATE_ID IN (             26637657)
SELECT  ATD.ATD_ATE_ID,
            PES.CAD_PES_NM_PESSOA PACIENTE,
            TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO) ATD_ATE_DT_ATENDIMENTO,
            TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO) + (ROUND((TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) * decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL) ) PARCELA_DATA_FIM,
            ROUND((TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) PARCELA_ATUAL,
            NULL DATA_SAIDA_ADM,
            (TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL) A,
            ((TO_DATE(V_ATD_ATE_DT_ATENDIMENTO_INI) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) INI,
            ((TO_DATE(V_ATD_ATE_DT_ATENDIMENTO_FIM) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) FIM,
            CASE WHEN TRUNC((TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) BETWEEN ((TO_DATE(V_ATD_ATE_DT_ATENDIMENTO_INI) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) AND ((TO_DATE(V_ATD_ATE_DT_ATENDIMENTO_FIM) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) THEN 1 ELSE 0 END ENTRE_PERIODO,
           UNI.CAD_UNI_DS_UNIDADE,
           LAT.CAD_LAT_DS_LOCAL_ATENDIMENTO,
           SETOR.CAD_SET_DS_SETOR,
           CNV.CAD_CNV_CD_HAC_PRESTADOR,
           CNV.CAD_CNV_NM_FANTASIA,
           decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL) CAD_CNV_QT_DIA_CONTA_PARCIAL,
           PLA.CAD_PLA_CD_PLANO_HAC,
           PLA.CAD_PLA_NM_NOME_PLANO,
           PAC.CAD_PAC_CD_CREDENCIAL,
           PAC.CAD_PAC_NR_PRONTUARIO,
           PES.CAD_PES_DT_NASCIMENTO
      FROM TB_ATD_ATE_ATENDIMENTO ATD
      JOIN TB_ATD_AIC_ATE_INT_COMPL AIC        ON AIC.ATD_ATE_ID = ATD.ATD_ATE_ID
      JOIN TB_ASS_PAT_PACIEATEND PAT ON PAT.ATD_ATE_ID = ATD.ATD_ATE_ID
      JOIN TB_CAD_PAC_PACIENTE PAC        ON PAC.CAD_PAC_ID_PACIENTE = PAT.CAD_PAC_ID_PACIENTE
      JOIN TB_CAD_PES_PESSOA PES        ON PES.CAD_PES_ID_PESSOA = PAC.CAD_PES_ID_PESSOA
      JOIN TB_CAD_CNV_CONVENIO CNV        ON CNV.CAD_CNV_ID_CONVENIO = PAC.CAD_CNV_ID_CONVENIO
      JOIN TB_CAD_PLA_PLANO PLA        ON PLA.CAD_PLA_ID_PLANO = PAC.CAD_PLA_ID_PLANO
     LEFT JOIN (SELECT QLE.CAD_QLE_ID,
                        QLE.CAD_SET_ID,
                        QLE.CAD_QLE_NR_QUARTO,
                        QLE.CAD_QLE_NR_LEITO,
                        IML.ATD_ATE_ID,
                        QLE.TIS_TAC_CD_TIPO_ACOMODACAO,
                        QLE.CAD_QLE_TP_QUARTO_LEITO,
                        IML.ATD_IML_DT_ENTRADA,
                        IML.ATD_IML_HR_ENTRADA
                   FROM TB_ATD_IML_INT_MOV_LEITO IML
                   LEFT JOIN TB_CAD_QLE_QUARTO_LEITO QLE                     ON QLE.CAD_QLE_ID = IML.CAD_CAD_QLE_ID
                   JOIN TB_ATD_ATE_ATENDIMENTO ATD2                     ON ATD2.ATD_ATE_ID = IML.ATD_ATE_ID
                  WHERE FNC_JUNTAR_DATA_HORA(IML.ATD_IML_DT_ENTRADA,
                                             IML.ATD_IML_HR_ENTRADA) =
                        (SELECT MAX(FNC_JUNTAR_DATA_HORA(IML3.ATD_IML_DT_ENTRADA,
                                                         IML3.ATD_IML_HR_ENTRADA))
                           FROM TB_ATD_IML_INT_MOV_LEITO IML3
                          WHERE IML3.ATD_ATE_ID = ATD2.ATD_ATE_ID
                            AND IML3.ATD_IML_FL_STATUS = 'A')) IML_QLE
        ON IML_QLE.ATD_ATE_ID = ATD.ATD_ATE_ID
      JOIN TB_CAD_SET_SETOR SETOR        ON SETOR.CAD_SET_ID = IML_QLE.CAD_SET_ID
      JOIN TB_CAD_UNI_UNIDADE UNI        ON UNI.CAD_UNI_ID_UNIDADE = SETOR.CAD_UNI_ID_UNIDADE
      JOIN TB_CAD_LAT_LOCAL_ATENDIMENTO LAT        ON LAT.CAD_LAT_ID_LOCAL_ATENDIMENTO =           SETOR.CAD_LAT_ID_LOCAL_ATENDIMENTO
     WHERE ATD.ATD_ATE_FL_STATUS = 'A'
     AND AIC.ATD_AIC_TP_SITUACAO_PAC = 'I'
       AND (LAT.CAD_LAT_ID_LOCAL_ATENDIMENTO = pCAD_LAT_ID_LOCAL_ATENDIMENTO)
       AND (UNI.CAD_UNI_ID_UNIDADE = pCAD_UNI_ID_UNIDADE)
       AND (pCAD_SET_ID IS NULL OR IML_QLE.CAD_SET_ID = pCAD_SET_ID)
      AND TRUNC((TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) BETWEEN ((TO_DATE(V_ATD_ATE_DT_ATENDIMENTO_INI) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) AND ((TO_DATE(V_ATD_ATE_DT_ATENDIMENTO_FIM) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL))
      AND ROUND((TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) > 0
     --  and cpr.atd_ate_id in (26339162,26635731,26442981,  26443876,26637066,26442590)
      AND (pCAD_CGC_ID_G IS NOT NULL AND CNV.CAD_CGC_ID = 1 OR pCAD_CGC_ID_E IS NOT NULL AND CNV.CAD_CGC_ID = 2)
        AND (pCAD_PLA_CD_TIPOPLANO_GB IS not NULL and PLA.CAD_PLA_CD_TIPOPLANO = 'GB'
   OR pCAD_PLA_CD_TIPOPLANO_PL IS NOT NULL AND PLA.CAD_PLA_CD_TIPOPLANO = 'PL'
   OR pCAD_PLA_CD_TIPOPLANO_PA IS NOT NULL AND PLA.CAD_PLA_CD_TIPOPLANO = 'PA'
   OR pCAD_PLA_CD_TIPOPLANO_SP IS NOT NULL AND PLA.CAD_PLA_CD_TIPOPLANO = 'SP'
   OR pCAD_PLA_CD_TIPOPLANO_FU IS NOT NULL AND PLA.CAD_PLA_CD_TIPOPLANO = 'FU'
   OR pCAD_PLA_CD_TIPOPLANO_NP IS NOT NULL AND PLA.CAD_PLA_CD_TIPOPLANO = 'NP')
    --   ORDER BY SETOR.CAD_SET_DS_SETOR,
   --              ROUND((TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) --PARCELA_ATUAL,
 UNION
 SELECT  ATD.ATD_ATE_ID,
            PES.CAD_PES_NM_PESSOA PACIENTE,
            TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO) ATD_ATE_DT_ATENDIMENTO,
            TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO) + (ROUND((TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) * decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL) ) PARCELA_DATA_FIM,
            ROUND((TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) PARCELA_ATUAL,
            INA.ATD_INA_DT_ALTA_ADM DATA_SAIDA_ADM,
            (TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL) A,
            ((TO_DATE(V_ATD_ATE_DT_ATENDIMENTO_INI) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) INI,
            ((TO_DATE(V_ATD_ATE_DT_ATENDIMENTO_FIM) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) FIM,
            CASE WHEN TRUNC((TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) BETWEEN ((TO_DATE(V_ATD_ATE_DT_ATENDIMENTO_INI) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) AND ((TO_DATE(V_ATD_ATE_DT_ATENDIMENTO_FIM) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) THEN 1 ELSE 0 END ENTRE_PERIODO,
           UNI.CAD_UNI_DS_UNIDADE,
           LAT.CAD_LAT_DS_LOCAL_ATENDIMENTO,
           SETOR.CAD_SET_DS_SETOR,
           CNV.CAD_CNV_CD_HAC_PRESTADOR,
           CNV.CAD_CNV_NM_FANTASIA,
           decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL) CAD_CNV_QT_DIA_CONTA_PARCIAL,
           PLA.CAD_PLA_CD_PLANO_HAC,
           PLA.CAD_PLA_NM_NOME_PLANO,
           PAC.CAD_PAC_CD_CREDENCIAL,
           PAC.CAD_PAC_NR_PRONTUARIO,
           PES.CAD_PES_DT_NASCIMENTO
      FROM TB_ATD_ATE_ATENDIMENTO ATD
      JOIN TB_ATD_AIC_ATE_INT_COMPL AIC        ON AIC.ATD_ATE_ID = ATD.ATD_ATE_ID
      JOIN TB_ASS_PAT_PACIEATEND PAT ON PAT.ATD_ATE_ID = ATD.ATD_ATE_ID
      JOIN TB_CAD_PAC_PACIENTE PAC        ON PAC.CAD_PAC_ID_PACIENTE = PAT.CAD_PAC_ID_PACIENTE
      JOIN TB_CAD_PES_PESSOA PES        ON PES.CAD_PES_ID_PESSOA = PAC.CAD_PES_ID_PESSOA
      JOIN TB_CAD_CNV_CONVENIO CNV        ON CNV.CAD_CNV_ID_CONVENIO = PAC.CAD_CNV_ID_CONVENIO
      JOIN TB_CAD_PLA_PLANO PLA        ON PLA.CAD_PLA_ID_PLANO = PAC.CAD_PLA_ID_PLANO
     LEFT JOIN (SELECT QLE.CAD_QLE_ID,
                        QLE.CAD_SET_ID,
                        QLE.CAD_QLE_NR_QUARTO,
                        QLE.CAD_QLE_NR_LEITO,
                        IML.ATD_ATE_ID,
                        QLE.TIS_TAC_CD_TIPO_ACOMODACAO,
                        QLE.CAD_QLE_TP_QUARTO_LEITO,
                        IML.ATD_IML_DT_ENTRADA,
                        IML.ATD_IML_HR_ENTRADA
                   FROM TB_ATD_IML_INT_MOV_LEITO IML
                   LEFT JOIN TB_CAD_QLE_QUARTO_LEITO QLE                     ON QLE.CAD_QLE_ID = IML.CAD_CAD_QLE_ID
                   JOIN TB_ATD_ATE_ATENDIMENTO ATD2                     ON ATD2.ATD_ATE_ID = IML.ATD_ATE_ID
                  WHERE FNC_JUNTAR_DATA_HORA(IML.ATD_IML_DT_ENTRADA,
                                             IML.ATD_IML_HR_ENTRADA) =
                        (SELECT MAX(FNC_JUNTAR_DATA_HORA(IML3.ATD_IML_DT_ENTRADA,
                                                         IML3.ATD_IML_HR_ENTRADA))
                           FROM TB_ATD_IML_INT_MOV_LEITO IML3
                          WHERE IML3.ATD_ATE_ID = ATD2.ATD_ATE_ID
                            AND IML3.ATD_IML_FL_STATUS = 'A')) IML_QLE
        ON IML_QLE.ATD_ATE_ID = ATD.ATD_ATE_ID
      JOIN TB_CAD_SET_SETOR SETOR        ON SETOR.CAD_SET_ID = IML_QLE.CAD_SET_ID
      JOIN TB_CAD_UNI_UNIDADE UNI        ON UNI.CAD_UNI_ID_UNIDADE = SETOR.CAD_UNI_ID_UNIDADE
      JOIN TB_CAD_LAT_LOCAL_ATENDIMENTO LAT        ON LAT.CAD_LAT_ID_LOCAL_ATENDIMENTO =           SETOR.CAD_LAT_ID_LOCAL_ATENDIMENTO
      JOIN TB_ATD_INA_INT_ALTA          INA        ON INA.ATD_ATE_ID = ATD.ATD_ATE_ID
     WHERE ATD.ATD_ATE_FL_STATUS = 'A'
     AND AIC.ATD_AIC_TP_SITUACAO_PAC = 'A'
       AND (LAT.CAD_LAT_ID_LOCAL_ATENDIMENTO = pCAD_LAT_ID_LOCAL_ATENDIMENTO)
       AND (UNI.CAD_UNI_ID_UNIDADE = pCAD_UNI_ID_UNIDADE)
       AND (pCAD_SET_ID IS NULL OR IML_QLE.CAD_SET_ID = pCAD_SET_ID)
       AND INA.ATD_INA_DT_ALTA_ADM >= V_ATD_ATE_DT_ATENDIMENTO_INI  --BETWEEN V_ATD_ATE_DT_ATENDIMENTO_INI AND V_ATD_ATE_DT_ATENDIMENTO_FIM
      AND TRUNC((TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) BETWEEN ((TO_DATE(V_ATD_ATE_DT_ATENDIMENTO_INI) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) AND ((TO_DATE(V_ATD_ATE_DT_ATENDIMENTO_FIM) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL))
      AND ROUND((TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) > 0
     --  and cpr.atd_ate_id in (26339162,26635731,26442981,  26443876,26637066,26442590)
      AND (pCAD_CGC_ID_G IS NOT NULL AND CNV.CAD_CGC_ID = 1 OR pCAD_CGC_ID_E IS NOT NULL AND CNV.CAD_CGC_ID = 2)
   AND (pCAD_PLA_CD_TIPOPLANO_GB IS not NULL and PLA.CAD_PLA_CD_TIPOPLANO = 'GB'
   OR pCAD_PLA_CD_TIPOPLANO_PL IS NOT NULL AND PLA.CAD_PLA_CD_TIPOPLANO = 'PL'
   OR pCAD_PLA_CD_TIPOPLANO_PA IS NOT NULL AND PLA.CAD_PLA_CD_TIPOPLANO = 'PA'
   OR pCAD_PLA_CD_TIPOPLANO_SP IS NOT NULL AND PLA.CAD_PLA_CD_TIPOPLANO = 'SP'
   OR pCAD_PLA_CD_TIPOPLANO_FU IS NOT NULL AND PLA.CAD_PLA_CD_TIPOPLANO = 'FU'
   OR pCAD_PLA_CD_TIPOPLANO_NP IS NOT NULL AND PLA.CAD_PLA_CD_TIPOPLANO = 'NP')
        ORDER BY 12,--SETOR.CAD_SET_DS_SETOR,
                 5--ROUND((TRUNC(SYSDATE) - TRUNC(ATD.ATD_ATE_DT_ATENDIMENTO))/decode(CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL,0,1,CNV.CAD_CNV_QT_DIA_CONTA_PARCIAL)) --PARCELA_ATUAL,
              ;
 -- SELECT CASE WHEN TRUNC((TRUNC(SYSDATE) - TRUNC(SYSDATE-32))/15) BETWEEN ((TRUNC(SYSDATE-3) - TRUNC(SYSDATE-32))/15) AND ((TRUNC(SYSDATE) - TRUNC(SYSDATE-32))/15)  THEN 1 ELSE 0 END B FROM DUAL
 -- SELECT * FROM TB_TMP_CPR_CONTA_PARC_REL;
  io_cursor := v_cursor;
end PRC_INT_REL_PRECIA_CCP;