CREATE OR REPLACE PROCEDURE PRC_BNF_VALIDA_CAR_PROCED
(
       pCODCON           IN BNF_CARENCIA_BENEFICIARIO.CODCON%TYPE,
       pCODEST           IN BNF_BENEFICIARIO.CODEST%TYPE,
       pCODBEN           IN BNF_BENEFICIARIO.CODBEN%TYPE,
       pCODSEQBEN        IN BNF_BENEFICIARIO.CODSEQBEN%TYPE,
       pDTATENDIMENTO    IN BNF_CARENCIA_BENEFICIARIO.DATINICAR%TYPE,
       pCODATOMED        IN TB_AUT_PROCED_CARENCIA.CODATOMED%TYPE,
       io_cursor         OUT PKG_CURSOR.t_cursor
)

 IS
  v_cursor          PKG_CURSOR.t_cursor;
  vDataFimCarencia  Date;
BEGIN

   SELECT MAX(DATFIMCAR) INTO vDataFimCarencia
   FROM BNF_CARENCIA_BENEFICIARIO
   WHERE CODCON = pCODCON
   AND CODEST = pCODEST
   AND CODBEN = pCODBEN
   AND CODSEQBEN = pCODSEQBEN
   AND TRUNC(pDTATENDIMENTO) BETWEEN TRUNC(DATINICAR) AND TRUNC(DATFIMCAR);
   
   IF (vDataFimCarencia IS NOT NULL) THEN
      SELECT MAX(DATFIMCAR) INTO vDataFimCarencia
      FROM BNF_CARENCIA_BENEFICIARIO
      WHERE CODSER IN (SELECT CODSER FROM TB_AUT_PROCED_CARENCIA WHERE CODATOMED = pCODATOMED) 
      	AND CODCON = pCODCON
        AND CODEST = pCODEST
        AND CODBEN = pCODBEN
        AND CODSEQBEN = pCODSEQBEN
        AND TRUNC(SYSDATE) BETWEEN TRUNC(DATINICAR) AND TRUNC(DATFIMCAR);
    IF (vDataFimCarencia IS NOT NULL) THEN
        OPEN v_cursor FOR
         SELECT 1 as RETORNO, vDataFimCarencia AS DATFIMCAR from dual;
         io_cursor := v_cursor;
        RETURN;
    END IF;
   END IF;

  OPEN v_cursor FOR
    SELECT 0 as RETORNO from dual;

  io_cursor := v_cursor;

END PRC_BNF_VALIDA_CAR_PROCED;
 