CREATE OR REPLACE TRIGGER TR_FCFOCOMPL_NROAUTOR_SGS
 AFTER
  INSERT OR UPDATE OF NROAUTORFUNC
 ON FCFOCOMPL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
vNOME FCFO.NOME%TYPE;
BEGIN

UPDATE SGS.TB_MTMD_HISTORICO_NOTA_FISCAL@PRODUCAO
  SET NUM_AUTORIZA_FORNECEDOR = :NEW.NROAUTORFUNC
WHERE CAD_MTMD_FILIAL_ID = :NEW.CODCOLIGADA AND
      IDMOV IN (SELECT IDMOV FROM TMOV NOTA
                 WHERE NOTA.CODCOLIGADA = :NEW.CODCOLIGADA AND
                       NOTA.CODTMV LIKE '1.2.%' AND
                       NOTA.DATASAIDA >= SYSDATE-60 AND
                       NOTA.CODCFO = :NEW.CODCFO);
                       
IF (:NEW.NROAUTORFUNC IS NOT NULL) THEN  
  SELECT NOME INTO vNOME FROM RM.FCFO F 
   WHERE F.CODCOLIGADA = :NEW.CODCOLIGADA AND 
         F.CODCFO = :NEW.CODCFO;          
  BEGIN
     INSERT INTO SGS.TB_CAD_FORNECEDOR_MTMD@PRODUCAO     
     VALUES (:NEW.CODCOLIGADA, :NEW.CODCFO, vNOME, :NEW.NROAUTORFUNC, SYSDATE);
  EXCEPTION WHEN DUP_VAL_ON_INDEX THEN
      UPDATE SGS.TB_CAD_FORNECEDOR_MTMD@PRODUCAO      
         SET CAD_FORN_NOME           = vNOME,
             CAD_FORN_NUM_AUTORIZA   = :NEW.NROAUTORFUNC,
             CAD_FORN_DT_ATUALIZACAO = SYSDATE                
      WHERE CAD_FORN_FILIAL_ID = :NEW.CODCOLIGADA AND
            CAD_FORN_CODCFO    = :NEW.CODCFO;
  END;
ELSE
  DELETE SGS.TB_CAD_FORNECEDOR_MTMD@PRODUCAO
   WHERE CAD_FORN_FILIAL_ID = :NEW.CODCOLIGADA AND
         CAD_FORN_CODCFO    = :NEW.CODCFO;
END IF;

END;
