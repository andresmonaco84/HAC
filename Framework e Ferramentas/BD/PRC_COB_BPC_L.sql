 create or replace procedure PRC_COB_BPC_L
(
     pCOB_BPC_ID IN TB_COB_BPC_BANCO_PAGTO_CONV.COB_BPC_ID%type DEFAULT NULL,
     pASS_CNU_ID IN TB_COB_BPC_BANCO_PAGTO_CONV.ASS_CNU_ID%type DEFAULT NULL,
     pASS_BCT_ID IN TB_COB_BPC_BANCO_PAGTO_CONV.ASS_BCT_ID%type DEFAULT NULL,
     pCOB_BPC_DT_INI_VIGENCIA IN TB_COB_BPC_BANCO_PAGTO_CONV.COB_BPC_DT_INI_VIGENCIA%type DEFAULT NULL,
     pCOB_BPC_DT_FIM_VIGENCIA IN TB_COB_BPC_BANCO_PAGTO_CONV.COB_BPC_DT_FIM_VIGENCIA%type DEFAULT NULL,

     pCAD_CNV_ID_CONVENIO IN TB_CAD_CNV_CONVENIO.CAD_CNV_ID_CONVENIO%TYPE DEFAULT NULL,
     pCAD_UNI_ID_UNIDADE IN TB_CAD_UNI_UNIDADE.CAD_UNI_ID_UNIDADE%TYPE DEFAULT NULL,
     pCAD_BAN_ID IN TB_CAD_BAN_BANCO.CAD_BAN_ID%TYPE DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor--,
  --  TESTE OUT LONG
)
is
/********************************************************************
*    Procedure: PRC_COB_BPC_L
*
*    Data Criacao:    6/1/2012   Por: Pedro
*    Data Alteracao:  data da alteração  Por: Nome do Analista
*
*    Funcao: Descrição da funcionalidade da Stored Procedure
*
*******************************************************************/
 v_cursor PKG_CURSOR.t_cursor;
  V_WHERE  varchar2(3000);
  V_SELECT  varchar2(8000);
begin
  V_WHERE := NULL;
IF pCOB_BPC_ID IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND BPC.COB_BPC_ID = ' || pCOB_BPC_ID; END IF;
IF pASS_CNU_ID IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND BPC.ASS_CNU_ID = ' || pASS_CNU_ID; END IF;
IF pASS_BCT_ID IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND BPC.ASS_BCT_ID = ' || pASS_BCT_ID; END IF;
IF pCOB_BPC_DT_INI_VIGENCIA IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND BPC.COB_BPC_DT_INI_VIGENCIA = ' || CHR(39) || pCOB_BPC_DT_INI_VIGENCIA || CHR(39); END IF;
IF pCOB_BPC_DT_FIM_VIGENCIA IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND BPC.COB_BPC_DT_FIM_VIGENCIA = ' || CHR(39) || pCOB_BPC_DT_FIM_VIGENCIA || CHR(39); END IF;

IF pCAD_CNV_ID_CONVENIO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND CNV.CAD_CNV_ID_CONVENIO = ' || pCAD_CNV_ID_CONVENIO; END IF;
IF pCAD_UNI_ID_UNIDADE IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND UNI.CAD_UNI_ID_UNIDADE = ' || pCAD_UNI_ID_UNIDADE; END IF;
IF pCAD_BAN_ID IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND BAN.CAD_BAN_ID = ' || pCAD_BAN_ID; END IF;

   V_SELECT := '
SELECT
       BPC.COB_BPC_ID,
       BPC.ASS_CNU_ID,
       BPC.ASS_BCT_ID,
       BPC.COB_BPC_DT_INI_VIGENCIA,
       BPC.COB_BPC_DT_FIM_VIGENCIA,
       BPC.COB_BPC_DT_CRIACAO,
       BPC.SEG_USU_ID_USUARIO_CRIACAO,
       BPC.COB_BPC_DT_ULTIMA_ATUALIZACAO,
       BPC.SEG_USU_ID_USUARIO_ATUALIZ,

       CNV.CAD_CNV_CD_HAC_PRESTADOR,
       CNV.CAD_CNV_NM_FANTASIA,
       UNI.CAD_UNI_DS_UNIDADE,
       USU_A.SEG_USU_DS_NOME SEG_USU_DS_NOME_ALTERACAO,
       USU_C.SEG_USU_DS_NOME SEG_USU_DS_NOME_CRIACAO,
       UNI.CAD_UNI_DS_UNIDADE,

      -- BCT.ASS_BCT_ID,
       BCT.CAD_BAN_ID,
       BCT.ASS_BCT_CD_AGENCIA,
       BCT.ASS_BCT_NR_CONTA,
       BCT.ASS_BCT_CD_CTA_CAIXA_RM,
       BCT.ASS_BCT_FL_ATIVO,
       BCT.ASS_BCT_DV_AGENCIA,
       BCT.ASS_BCT_DV_CONTA,
       BCT.ASS_BCT_DT_CRIACAO,
      -- BCT.SEG_USU_ID_USUARIO_CRIACAO,
      -- BCT.ASS_BCT_DT_ULTIMA_ATUALIZACAO,
      -- BCT.SEG_USU_ID_USUARIO_ATUALIZ,

       BAN.CAD_BAN_CD_BANCO,
       BAN.CAD_BAN_NM_BANCO,
       BAN.CAD_BAN_NR_BANCO_RM,

       --CNU.ASS_CNU_ID,
       CNU.ASS_CNU_DT_INI_VIGENCIA,
       CNU.ASS_CNU_DT_FIM_VIGENCIA,
       CNU.ASS_CNU_DS_MOTIVO_FIM_VIGENCIA,
       CNU.ASS_CNU_DT_ULTIMA_ATUALIZACAO,
       CNU.CAD_CNV_ID_CONVENIO,
       CNU.CAD_UNI_ID_UNIDADE
      -- CNU.SEG_USU_ID_USUARIO

FROM TB_COB_BPC_BANCO_PAGTO_CONV BPC
JOIN TB_ASS_BCT_BANCO_CONTA      BCT   ON   BCT.ASS_BCT_ID           =  BPC.ASS_BCT_ID
JOIN TB_ASS_CNU_CONVENIO_UNIDADE CNU   ON   CNU.ASS_CNU_ID           =  BPC.ASS_CNU_ID
JOIN TB_CAD_UNI_UNIDADE          UNI   ON   UNI.CAD_UNI_ID_UNIDADE   =  CNU.CAD_UNI_ID_UNIDADE
JOIN TB_CAD_CNV_CONVENIO         CNV   ON   CNV.CAD_CNV_ID_CONVENIO  =  CNU.CAD_CNV_ID_CONVENIO
JOIN TB_CAD_BAN_BANCO            BAN   ON   BAN.CAD_BAN_ID           =  BCT.CAD_BAN_ID
LEFT JOIN TB_SEG_USU_USUARIO     USU_A ON   USU_A.SEG_USU_ID_USUARIO =  BPC.SEG_USU_ID_USUARIO_ATUALIZ
JOIN TB_SEG_USU_USUARIO          USU_C ON   USU_C.SEG_USU_ID_USUARIO =  BPC.SEG_USU_ID_USUARIO_CRIACAO

WHERE (BPC.COB_BPC_DT_FIM_VIGENCIA IS NULL OR BPC.COB_BPC_DT_FIM_VIGENCIA >= trunc(SYSDATE))
' || V_WHERE || '
ORDER BY UNI.CAD_UNI_DS_UNIDADE ASC,BPC.COB_BPC_DT_INI_VIGENCIA DESC'    ;
 --TESTE :=  V_SELECT ;
OPEN v_cursor FOR
  V_SELECT ;
  io_cursor := v_cursor;
end PRC_COB_BPC_L;
