 
--PRC_TMP_CPR_CONTA_PARC_REL_L
create or replace procedure PRC_TMP_CPR_CONTA_PARC_REL_L 
(
     pATD_ATE_ID IN TB_TMP_CPR_CONTA_PARC_REL.ATD_ATE_ID%type DEFAULT NULL,
     pCAD_PAC_ID_PACIENTE IN TB_TMP_CPR_CONTA_PARC_REL.CAD_PAC_ID_PACIENTE%type DEFAULT NULL,
     pFAT_CCP_ID IN TB_TMP_CPR_CONTA_PARC_REL.FAT_CCP_ID%type DEFAULT NULL,
     pSEG_USU_ID_USUARIO IN TB_TMP_CPR_CONTA_PARC_REL.SEG_USU_ID_USUARIO%type DEFAULT NULL,
     pTMP_CPR_DT_ULTIMA_ATUALIZACAO IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_DT_ULTIMA_ATUALIZACAO%type DEFAULT NULL,
     pTMP_CPR_DT_INT IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_DT_INT%type DEFAULT NULL,
     pTMP_CPR_DT_ALTA IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_DT_ALTA%type DEFAULT NULL,
     pTMP_CPR_NR_SEQ_LOTE IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_NR_SEQ_LOTE%type DEFAULT NULL,
     pTMP_CPR_NR_SEQ_IMPRIME IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_NR_SEQ_IMPRIME%type DEFAULT NULL,
     pTMP_CPR_DT_PARCELA_INI IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_DT_PARCELA_INI%type DEFAULT NULL,
     pTMP_CPR_DT_PARCELA IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_DT_PARCELA%type DEFAULT NULL,
     pTMP_CPR_MES_ANO_FAT IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_MES_ANO_FAT%type DEFAULT NULL,
     pTMP_CPR_STATUS_AUDITORIA IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_STATUS_AUDITORIA%type DEFAULT NULL,
     pTMP_CPR_FLAG_FATURADO IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_FLAG_FATURADO%type DEFAULT NULL,
     pTMP_CPR_FLAG_EMITIDO IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_FLAG_EMITIDO%type DEFAULT NULL,
     pTMP_CPR_NR_NOTA_FISCAL IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_NR_NOTA_FISCAL%type DEFAULT NULL,
     pTMP_CPR_TP_SERIE_FISCAL IN TB_TMP_CPR_CONTA_PARC_REL.TMP_CPR_TP_SERIE_FISCAL%type DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
) 
is
/********************************************************************
*    Procedure: PRC_TMP_CPR_CONTA_PARC_REL_L
* 
*    Data Criacao: 	data da  criação   Por: Nome do Analista
*    Data Alteracao:	data da alteração  Por: Nome do Analista
*
*    Funcao: Descrição da funcionalidade da Stored Procedure
*
*******************************************************************/
 v_cursor PKG_CURSOR.t_cursor;
  V_WHERE  varchar2(5000);
  V_SELECT  varchar2(5000);
begin
  V_WHERE := NULL;
  IF pATD_ATE_ID IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_ATE_ID = ' || pATD_ATE_ID; END IF;
IF pCAD_PAC_ID_PACIENTE IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND CAD_PAC_ID_PACIENTE = ' || pCAD_PAC_ID_PACIENTE; END IF;
IF pFAT_CCP_ID IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND FAT_CCP_ID = ' || pFAT_CCP_ID; END IF;
IF pSEG_USU_ID_USUARIO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND SEG_USU_ID_USUARIO = ' || pSEG_USU_ID_USUARIO; END IF;
IF pTMP_CPR_DT_ULTIMA_ATUALIZACAO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_DT_ULTIMA_ATUALIZACAO = ' || CHR(39) || pTMP_CPR_DT_ULTIMA_ATUALIZACAO || CHR(39); END IF;
IF pTMP_CPR_DT_INT IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_DT_INT = ' || CHR(39) || pTMP_CPR_DT_INT || CHR(39); END IF;
IF pTMP_CPR_DT_ALTA IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_DT_ALTA = ' || CHR(39) || pTMP_CPR_DT_ALTA || CHR(39); END IF;
IF pTMP_CPR_NR_SEQ_LOTE IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_NR_SEQ_LOTE = ' || pTMP_CPR_NR_SEQ_LOTE; END IF;
IF pTMP_CPR_NR_SEQ_IMPRIME IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_NR_SEQ_IMPRIME = ' || pTMP_CPR_NR_SEQ_IMPRIME; END IF;
IF pTMP_CPR_DT_PARCELA_INI IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_DT_PARCELA_INI = ' || CHR(39) || pTMP_CPR_DT_PARCELA_INI || CHR(39); END IF;
IF pTMP_CPR_DT_PARCELA IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_DT_PARCELA = ' || CHR(39) || pTMP_CPR_DT_PARCELA || CHR(39); END IF;
IF pTMP_CPR_MES_ANO_FAT IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_MES_ANO_FAT = ' || CHR(39) || pTMP_CPR_MES_ANO_FAT || CHR(39); END IF;
IF pTMP_CPR_STATUS_AUDITORIA IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_STATUS_AUDITORIA = ' || CHR(39) || pTMP_CPR_STATUS_AUDITORIA || CHR(39); END IF;
IF pTMP_CPR_FLAG_FATURADO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_FLAG_FATURADO = ' || CHR(39) || pTMP_CPR_FLAG_FATURADO || CHR(39); END IF;
IF pTMP_CPR_FLAG_EMITIDO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_FLAG_EMITIDO = ' || CHR(39) || pTMP_CPR_FLAG_EMITIDO || CHR(39); END IF;
IF pTMP_CPR_NR_NOTA_FISCAL IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_NR_NOTA_FISCAL = ' || CHR(39) || pTMP_CPR_NR_NOTA_FISCAL || CHR(39); END IF;
IF pTMP_CPR_TP_SERIE_FISCAL IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND TMP_CPR_TP_SERIE_FISCAL = ' || CHR(39) || pTMP_CPR_TP_SERIE_FISCAL || CHR(39); END IF;
 
   V_SELECT := '
SELECT	
       ATD_ATE_ID,
       CAD_PAC_ID_PACIENTE,
       FAT_CCP_ID,
       SEG_USU_ID_USUARIO,
       TMP_CPR_DT_ULTIMA_ATUALIZACAO,
       TMP_CPR_DT_INT,
       TMP_CPR_DT_ALTA,
       TMP_CPR_NR_SEQ_LOTE,
       TMP_CPR_NR_SEQ_IMPRIME,
       TMP_CPR_DT_PARCELA_INI,
       TMP_CPR_DT_PARCELA,
       TMP_CPR_MES_ANO_FAT,
       TMP_CPR_STATUS_AUDITORIA,
       TMP_CPR_FLAG_FATURADO,
       TMP_CPR_FLAG_EMITIDO,
       TMP_CPR_NR_NOTA_FISCAL,
       TMP_CPR_TP_SERIE_FISCAL
FROM TB_TMP_CPR_CONTA_PARC_REL
WHERE null is null  '    ;
       
OPEN v_cursor FOR
  V_SELECT || V_WHERE ;
  io_cursor := v_cursor;
end PRC_TMP_CPR_CONTA_PARC_REL_L;
