create or replace procedure PRC_ATD_EPM_EXAME_PRESC_MED_L
(
     pATD_EPM_ID IN TB_ATD_EPM_EXAME_PRESC_MED.ATD_EPM_ID%type DEFAULT NULL,
     pATD_PME_ID IN TB_ATD_EPM_EXAME_PRESC_MED.ATD_PME_ID%type DEFAULT NULL,
     pATD_EPM_DS_EXAME IN TB_ATD_EPM_EXAME_PRESC_MED.ATD_EPM_DS_EXAME%type DEFAULT NULL,
     pATD_EPM_DS_OBSERVACAO IN TB_ATD_EPM_EXAME_PRESC_MED.ATD_EPM_DS_OBSERVACAO%type DEFAULT NULL,
     pATD_EPM_DT_HORA_CRIACAO IN TB_ATD_EPM_EXAME_PRESC_MED.ATD_EPM_DT_HORA_CRIACAO%type DEFAULT NULL,
     pATD_EPM_ID_USU_CRIACAO IN TB_ATD_EPM_EXAME_PRESC_MED.ATD_EPM_ID_USU_CRIACAO%type DEFAULT NULL,
     pATD_EPM_DT_ULT_ATUALIZ IN TB_ATD_EPM_EXAME_PRESC_MED.ATD_EPM_DT_ULT_ATUALIZ%type DEFAULT NULL,
     pATD_EPM_ID_USU_ULT_ATUALIZ IN TB_ATD_EPM_EXAME_PRESC_MED.ATD_EPM_ID_USU_ULT_ATUALIZ%type DEFAULT NULL,
          pATD_EPM_STATUS IN TB_ATD_EPM_EXAME_PRESC_MED.ATD_EPM_STATUS%type DEFAULT NULL,
               pATD_EPM_FL_IMPRESSO IN TB_ATD_EPM_EXAME_PRESC_MED.ATD_EPM_FL_IMPRESSO%type DEFAULT NULL,
     io_cursor OUT PKG_CURSOR.t_cursor
)
is
/********************************************************************
*    Procedure: PRC_ATD_EPM_EXAME_PRESC_MED_L
*
*    Data Criacao: 	data da  cria??o   Por: Nome do Analista
*    Data Alteracao:	data da altera??o  Por: Nome do Analista
*
*    Funcao: Descri??o da funcionalidade da Stored Procedure
*
*******************************************************************/
 v_cursor PKG_CURSOR.t_cursor;
  V_WHERE  varchar2(5000);
  V_SELECT  varchar2(5000);
begin
  V_WHERE := NULL;
  IF pATD_EPM_ID IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_EPM_ID = ' || pATD_EPM_ID; END IF;
IF pATD_PME_ID IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_PME_ID = ' || pATD_PME_ID; END IF;
IF pATD_EPM_DS_EXAME IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_EPM_DS_EXAME = ' || CHR(39) || pATD_EPM_DS_EXAME || CHR(39); END IF;
IF pATD_EPM_DS_OBSERVACAO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_EPM_DS_OBSERVACAO = ' || CHR(39) || pATD_EPM_DS_OBSERVACAO || CHR(39); END IF;
IF pATD_EPM_DT_HORA_CRIACAO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_EPM_DT_HORA_CRIACAO = ' || CHR(39) || pATD_EPM_DT_HORA_CRIACAO || CHR(39); END IF;
IF pATD_EPM_ID_USU_CRIACAO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_EPM_ID_USU_CRIACAO = ' || pATD_EPM_ID_USU_CRIACAO; END IF;
IF pATD_EPM_DT_ULT_ATUALIZ IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_EPM_DT_ULT_ATUALIZ = ' || CHR(39) || pATD_EPM_DT_ULT_ATUALIZ || CHR(39); END IF;
IF pATD_EPM_ID_USU_ULT_ATUALIZ IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_EPM_ID_USU_ULT_ATUALIZ = ' || pATD_EPM_ID_USU_ULT_ATUALIZ; END IF;
IF pATD_EPM_STATUS IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_EPM_STATUS = ' || CHR(39) || pATD_EPM_STATUS || CHR(39); END IF;
IF pATD_EPM_FL_IMPRESSO IS NOT NULL THEN V_WHERE:= V_WHERE || ' AND ATD_EPM_FL_IMPRESSO = ' || CHR(39) || pATD_EPM_FL_IMPRESSO || CHR(39); END IF;

   V_SELECT := '
SELECT
       ATD_EPM_ID,
       ATD_PME_ID,
       ATD_EPM_DS_EXAME,
       ATD_EPM_DS_OBSERVACAO,
       ATD_EPM_DT_HORA_CRIACAO,
       ATD_EPM_ID_USU_CRIACAO,
       ATD_EPM_DT_ULT_ATUALIZ,
       ATD_EPM_ID_USU_ULT_ATUALIZ,
       ATD_EPM_STATUS,
       ATD_EPM_FL_IMPRESSO
FROM TB_ATD_EPM_EXAME_PRESC_MED
WHERE null is null  '    ;

OPEN v_cursor FOR
  V_SELECT || V_WHERE ;
  io_cursor := v_cursor;
end PRC_ATD_EPM_EXAME_PRESC_MED_L;
