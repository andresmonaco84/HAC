create or replace procedure PRC_AGE_ESF_ESCALA_FALTAS_D
  (
     pAGE_ESF_ID IN TB_AGE_ESF_ESCALA_FALTAS.AGE_ESF_ID%type,
     pAGE_ESF_DT_FIM_FALTA IN TB_AGE_ESF_ESCALA_FALTAS.AGE_ESF_DT_FIM_FALTA%type default null
  )
  is
  /********************************************************************
  *    Procedure: PRC_AGE_ESF_ESCALA_FALTAS_D
 *
  *    Data Alteracao:	03/11/2014   Por: Cristiane Gomes
  *    Altera??o: Altera??o na regra de exclusao de falta medica considerando pAGE_ESF_DT_FIM_FALTA para exclus?o parcial
  *
    *******************************************************************/
  begin
  FOR I IN (SELECT ESF.AGE_ESM_ID,
                   ESF.AGE_ESF_ID,
                   ESF.AGE_ESF_DT_INI_FALTA,
                   ESF.AGE_ESF_DT_FIM_FALTA,
                   ESF.AGE_ESF_FL_SUBSTITUTO_OK,
                   ESF.AGE_ESF_HR_INI_FALTA,
                   ESF.AGE_ESF_HR_FIM_FALTA
              FROM TB_AGE_ESF_ESCALA_FALTAS ESF
             WHERE ESF.AGE_ESF_ID = pAGE_ESF_ID) LOOP
    IF I.AGE_ESF_FL_SUBSTITUTO_OK = 'N' AND       I.AGE_ESF_DT_INI_FALTA = TRUNC(SYSDATE) THEN
      --DESFAZER CANCELAMENTO DE AGENDAMENTOS PENDENTES NA DATA ATUAL
      UPDATE TB_AGE_AGD_AGENDA AGD
         SET AGD.AGE_AGD_FL_STATUS = 'P'
       WHERE AGD.AGE_ESM_ID = I.AGE_ESM_ID
         AND AGD.AGE_AGD_DT_ATENDIMENTO = I.AGE_ESF_DT_INI_FALTA
         AND (I.AGE_ESF_HR_INI_FALTA IS NULL OR AGD.AGE_AGD_HR_ATENDIMENTO BETWEEN I.AGE_ESF_HR_INI_FALTA AND I.AGE_ESF_HR_FIM_FALTA)
         AND NOT EXISTS
       (SELECT *
                FROM TB_ATD_ATE_ATENDIMENTO ATE
               WHERE ATE.ATD_ATE_ID = AGD.AGE_AGD_CD_INTAMB);
      --DESFAZER CANCELAMENTO DE AGENDAMENTOS ATIVOS NA DATA ATUAL
      UPDATE TB_AGE_AGD_AGENDA AGD
         SET AGD.AGE_AGD_FL_STATUS = 'A'
       WHERE AGD.AGE_ESM_ID = I.AGE_ESM_ID
         AND AGD.AGE_AGD_DT_ATENDIMENTO = I.AGE_ESF_DT_INI_FALTA
         AND (I.AGE_ESF_HR_INI_FALTA IS NULL OR AGD.AGE_AGD_HR_ATENDIMENTO BETWEEN I.AGE_ESF_HR_INI_FALTA AND I.AGE_ESF_HR_FIM_FALTA)
         AND EXISTS
       (SELECT *
                FROM TB_ATD_ATE_ATENDIMENTO ATE
               WHERE ATE.ATD_ATE_ID = AGD.AGE_AGD_CD_INTAMB);
      --EXCLUIR REGISTROS DE CANCELAMENTOS
      DELETE FROM TB_AGE_AGC_AGENDA_CANCELADA AGC
      WHERE AGC.AGE_ESM_ID = I.AGE_ESM_ID
      AND AGC.AGE_AGD_DT_ATENDIMENTO = I.AGE_ESF_DT_INI_FALTA;
      -- REATIVAR ATENDIMENTOS CANCELADOS
      UPDATE TB_ATD_ATE_ATENDIMENTO ATE
         SET ATE.ATD_ATE_FL_STATUS = 'A'
       WHERE ATE.ATD_ATE_DT_ATENDIMENTO = TRUNC(SYSDATE) AND (I.AGE_ESF_HR_INI_FALTA IS NULL OR
             ATE.ATD_ATE_HR_ATENDIMENTO BETWEEN I.AGE_ESF_HR_INI_FALTA AND I.AGE_ESF_HR_FIM_FALTA)
         AND EXISTS (SELECT *
                FROM TB_AGE_AGD_AGENDA AGD
               WHERE AGD.AGE_AGD_CD_INTAMB = ATE.ATD_ATE_ID
                 AND AGD.AGE_AGD_FL_STATUS = 'A');
      -- REOCUPAR HORARIOS NA AGENDA GERADA
  /*    UPDATE TB_AGE_AGG_AGENDA_GERADA AGG
         SET AGG.AGE_AGG_FL_STATUS_HORARIO = 2,
             AGG.AGE_AGG_DS_BLOQUEIO = NULL
       WHERE AGG.AGE_ESM_ID = I.AGE_ESM_ID
         AND ((pAGE_ESF_DT_FIM_FALTA IS NULL AND AGG.AGE_AGG_DT_AGENDA BETWEEN I.AGE_ESF_DT_INI_FALTA AND I.AGE_ESF_DT_FIM_FALTA)
          OR (pAGE_ESF_DT_FIM_FALTA IS NOT NULL AND AGG.AGE_AGG_DT_AGENDA BETWEEN I.AGE_ESF_DT_FIM_FALTA AND pAGE_ESF_DT_FIM_FALTA))
         AND (I.AGE_ESF_HR_INI_FALTA IS NULL OR AGG.AGE_AGG_HR_AGENDA BETWEEN I.AGE_ESF_HR_INI_FALTA AND I.AGE_ESF_HR_FIM_FALTA)
         AND EXISTS (SELECT *
                FROM TB_AGE_AGD_AGENDA AGD
               WHERE AGD.AGE_AGG_ID = AGG.AGE_AGG_ID
                 AND AGD.AGE_AGD_FL_STATUS != 'C');*/
      --LIBERAR HORARIOS NA AGENDA GERADA
      UPDATE TB_AGE_AGG_AGENDA_GERADA AGG
         SET AGG.AGE_AGG_FL_STATUS_HORARIO = 1,
             AGG.AGE_AGG_DS_BLOQUEIO = NULL
       WHERE AGG.AGE_ESM_ID = I.AGE_ESM_ID
          AND ((pAGE_ESF_DT_FIM_FALTA IS NULL AND AGG.AGE_AGG_DT_AGENDA BETWEEN I.AGE_ESF_DT_INI_FALTA AND I.AGE_ESF_DT_FIM_FALTA)
          OR (pAGE_ESF_DT_FIM_FALTA IS NOT NULL AND AGG.AGE_AGG_DT_AGENDA BETWEEN I.AGE_ESF_DT_FIM_FALTA AND TRUNC(pAGE_ESF_DT_FIM_FALTA)))        
         AND (I.AGE_ESF_HR_INI_FALTA IS NULL OR AGG.AGE_AGG_HR_AGENDA BETWEEN I.AGE_ESF_HR_INI_FALTA AND I.AGE_ESF_HR_FIM_FALTA)
         AND NOT EXISTS (SELECT *
                FROM TB_AGE_AGD_AGENDA AGD
               WHERE AGD.AGE_AGG_ID = AGG.AGE_AGG_ID
                 AND AGD.AGE_AGD_FL_STATUS != 'C');
END IF;  --I.AGE_ESF_FL_SUBSTITUTO_OK = 'N' AND       I.AGE_ESF_DT_INI_FALTA = TRUNC(SYSDATE)
IF pAGE_ESF_DT_FIM_FALTA IS NULL THEN
 UPDATE TB_AGE_AGG_AGENDA_GERADA AGG
       SET AGG.AGE_ESF_ID = NULL
     WHERE AGG.AGE_ESF_ID = I.AGE_ESF_ID      ;
      DELETE FROM TB_AGE_ESF_ESCALA_FALTAS ESF WHERE ESF.AGE_ESF_ID = I.AGE_ESF_ID;
END IF;
IF pAGE_ESF_DT_FIM_FALTA IS NOT NULL THEN 
UPDATE TB_AGE_AGG_AGENDA_GERADA AGG
       SET AGG.AGE_ESF_ID = NULL
     WHERE AGG.AGE_ESF_ID = I.AGE_ESF_ID
        AND AGG.AGE_AGG_DT_AGENDA > I.AGE_ESF_DT_FIM_FALTA 
        AND AGG.AGE_AGG_DT_AGENDA  <= TRUNC(pAGE_ESF_DT_FIM_FALTA);
  END IF;
  END LOOP;
  end PRC_AGE_ESF_ESCALA_FALTAS_D;
 